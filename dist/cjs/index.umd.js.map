{"version":3,"file":"index.umd.js","sources":["../../node_modules/base64-js/index.js","../../node_modules/ieee754/index.js","../../node_modules/sha3/node_modules/buffer/index.js","../../node_modules/sha3/sponge/permute/copy/index.js","../../node_modules/sha3/sponge/permute/chi/index.js","../../node_modules/sha3/sponge/permute/iota/round-constants/index.js","../../node_modules/sha3/sponge/permute/iota/index.js","../../node_modules/sha3/sponge/permute/rho-pi/pi-shuffles/index.js","../../node_modules/sha3/sponge/permute/rho-pi/rho-offsets/index.js","../../node_modules/sha3/sponge/permute/rho-pi/index.js","../../node_modules/sha3/sponge/permute/theta/index.js","../../node_modules/sha3/sponge/permute/index.js","../../node_modules/sha3/sponge/index.js","../../node_modules/sha3/index.js","../../src/classes/utils/hexToDecimal.ts","../../src/classes/utils/encodeDecodeTransaction.ts","../../src/classes/Contract.ts","../../src/logger/logger.ts","../../src/logger/packageVersion.ts","../../node_modules/big.js/big.mjs","../../src/shared/tinyBig/helpers.ts","../../src/shared/tinyBig/tinyBig.ts","../../src/classes/utils/cleanTransaction.ts","../../src/shared/validateTypes.ts","../../src/utils/toChecksumAddress.ts","../../src/classes/utils/cleanLog.ts","../../node_modules/unfetch/dist/unfetch.module.js","../../node_modules/isomorphic-unfetch/browser.js","../../src/classes/utils/fetchers.ts","../../src/utils/bytes.ts","../../src/classes/utils/prepareTransaction.ts","../../src/providers/utils/chainsInfo.ts","../../src/providers/BaseProvider.ts","../../src/classes/utils/cleanTransactionReceipt.ts","../../src/classes/utils/cleanBlock.ts","../../src/providers/FallthroughProvider.ts","../../src/providers/JsonRpcProvider.ts","../../src/utils/keccak256.ts","../../node_modules/@noble/secp256k1/lib/esm/index.js","../../src/utils/computePublicKey.ts","../../src/utils/toUtf8Bytes.ts","../../node_modules/buffer/index.js","../../src/utils/solidityKeccak256.ts","../../src/utils/computeAddress.ts","../../src/utils/etherToGwei.ts","../../src/utils/etherToWei.ts","../../src/utils/gweiToEther.ts","../../src/utils/hashMessage.ts","../../src/utils/isAddress.ts","../../src/utils/splitSignature.ts","../../src/utils/weiToEther.ts"],"sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","\"use strict\";var copy=function copy(I,i){return function(O,o){var oi=o*2;var ii=i*2;O[oi]=I[ii];O[oi+1]=I[ii+1]}};module.exports=copy;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _copy=_interopRequireDefault(require(\"../copy\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var chi=function chi(_ref){var A=_ref.A,C=_ref.C;for(var y=0;y<25;y+=5){for(var x=0;x<5;x++){(0,_copy[\"default\"])(A,y+x)(C,x)}for(var _x=0;_x<5;_x++){var xy=(y+_x)*2;var x1=(_x+1)%5*2;var x2=(_x+2)%5*2;A[xy]^=~C[x1]&C[x2];A[xy+1]^=~C[x1+1]&C[x2+1]}}};var _default=chi;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var ROUND_CONSTANTS=new Uint32Array([0,1,0,32898,2147483648,32906,2147483648,2147516416,0,32907,0,2147483649,2147483648,2147516545,2147483648,32777,0,138,0,136,0,2147516425,0,2147483658,0,2147516555,2147483648,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,0,32778,2147483648,2147483658,2147483648,2147516545,2147483648,32896,0,2147483649,2147483648,2147516424]);var _default=ROUND_CONSTANTS;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _roundConstants=_interopRequireDefault(require(\"./round-constants\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var iota=function iota(_ref){var A=_ref.A,roundIndex=_ref.roundIndex;var i=roundIndex*2;A[0]^=_roundConstants[\"default\"][i];A[1]^=_roundConstants[\"default\"][i+1]};var _default=iota;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var PI_SHUFFLES=[10,7,11,17,18,3,5,16,8,21,24,4,15,23,19,13,12,2,20,14,22,9,6,1];var _default=PI_SHUFFLES;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var RHO_OFFSETS=[1,3,6,10,15,21,28,36,45,55,2,14,27,41,56,8,25,43,62,18,39,61,20,44];var _default=RHO_OFFSETS;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _piShuffles=_interopRequireDefault(require(\"./pi-shuffles\"));var _rhoOffsets=_interopRequireDefault(require(\"./rho-offsets\"));var _copy=_interopRequireDefault(require(\"../copy\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var rhoPi=function rhoPi(_ref){var A=_ref.A,C=_ref.C,W=_ref.W;(0,_copy[\"default\"])(A,1)(W,0);var H=0;var L=0;var Wi=0;var ri=32;for(var i=0;i<24;i++){var j=_piShuffles[\"default\"][i];var r=_rhoOffsets[\"default\"][i];(0,_copy[\"default\"])(A,j)(C,0);H=W[0];L=W[1];ri=32-r;Wi=r<32?0:1;W[Wi]=H<<r|L>>>ri;W[(Wi+1)%2]=L<<r|H>>>ri;(0,_copy[\"default\"])(W,0)(A,j);(0,_copy[\"default\"])(C,0)(W,0)}};var _default=rhoPi;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _copy=_interopRequireDefault(require(\"../copy\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var theta=function theta(_ref){var A=_ref.A,C=_ref.C,D=_ref.D,W=_ref.W;var H=0;var L=0;for(var x=0;x<5;x++){var x20=x*2;var x21=(x+5)*2;var x22=(x+10)*2;var x23=(x+15)*2;var x24=(x+20)*2;C[x20]=A[x20]^A[x21]^A[x22]^A[x23]^A[x24];C[x20+1]=A[x20+1]^A[x21+1]^A[x22+1]^A[x23+1]^A[x24+1]}for(var _x=0;_x<5;_x++){(0,_copy[\"default\"])(C,(_x+1)%5)(W,0);H=W[0];L=W[1];W[0]=H<<1|L>>>31;W[1]=L<<1|H>>>31;D[_x*2]=C[(_x+4)%5*2]^W[0];D[_x*2+1]=C[(_x+4)%5*2+1]^W[1];for(var y=0;y<25;y+=5){A[(y+_x)*2]^=D[_x*2];A[(y+_x)*2+1]^=D[_x*2+1]}}};var _default=theta;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _chi=_interopRequireDefault(require(\"./chi\"));var _iota=_interopRequireDefault(require(\"./iota\"));var _rhoPi=_interopRequireDefault(require(\"./rho-pi\"));var _theta=_interopRequireDefault(require(\"./theta\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var permute=function permute(){var C=new Uint32Array(10);var D=new Uint32Array(10);var W=new Uint32Array(2);return function(A){for(var roundIndex=0;roundIndex<24;roundIndex++){(0,_theta[\"default\"])({A:A,C:C,D:D,W:W});(0,_rhoPi[\"default\"])({A:A,C:C,W:W});(0,_chi[\"default\"])({A:A,C:C});(0,_iota[\"default\"])({A:A,roundIndex:roundIndex})}C.fill(0);D.fill(0);W.fill(0)}};var _default=permute;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _buffer=require(\"buffer\");var _permute=_interopRequireDefault(require(\"./permute\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var xorWords=function xorWords(I,O){for(var i=0;i<I.length;i+=8){var o=i/4;O[o]^=I[i+7]<<24|I[i+6]<<16|I[i+5]<<8|I[i+4];O[o+1]^=I[i+3]<<24|I[i+2]<<16|I[i+1]<<8|I[i]}return O};var readWords=function readWords(I,O){for(var o=0;o<O.length;o+=8){var i=o/4;O[o]=I[i+1];O[o+1]=I[i+1]>>>8;O[o+2]=I[i+1]>>>16;O[o+3]=I[i+1]>>>24;O[o+4]=I[i];O[o+5]=I[i]>>>8;O[o+6]=I[i]>>>16;O[o+7]=I[i]>>>24}return O};var Sponge=function Sponge(_ref){var _this=this;var capacity=_ref.capacity,padding=_ref.padding;var keccak=(0,_permute[\"default\"])();var stateSize=200;var blockSize=capacity/8;var queueSize=stateSize-capacity/4;var queueOffset=0;var state=new Uint32Array(stateSize/4);var queue=_buffer.Buffer.allocUnsafe(queueSize);this.absorb=function(buffer){for(var i=0;i<buffer.length;i++){queue[queueOffset]=buffer[i];queueOffset+=1;if(queueOffset>=queueSize){xorWords(queue,state);keccak(state);queueOffset=0}}return _this};this.squeeze=function(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var output={buffer:options.buffer||_buffer.Buffer.allocUnsafe(blockSize),padding:options.padding||padding,queue:_buffer.Buffer.allocUnsafe(queue.length),state:new Uint32Array(state.length)};queue.copy(output.queue);for(var i=0;i<state.length;i++){output.state[i]=state[i]}output.queue.fill(0,queueOffset);output.queue[queueOffset]|=output.padding;output.queue[queueSize-1]|=128;xorWords(output.queue,output.state);for(var offset=0;offset<output.buffer.length;offset+=queueSize){keccak(output.state);readWords(output.state,output.buffer.slice(offset,offset+queueSize))}return output.buffer};this.reset=function(){queue.fill(0);state.fill(0);queueOffset=0;return _this};return this};var _default=Sponge;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=exports.SHAKE=exports.SHA3Hash=exports.SHA3=exports.Keccak=void 0;var _buffer=require(\"buffer\");var _sponge=_interopRequireDefault(require(\"./sponge\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var createHash=function createHash(_ref){var allowedSizes=_ref.allowedSizes,defaultSize=_ref.defaultSize,padding=_ref.padding;return function Hash(){var _this=this;var size=arguments.length>0&&arguments[0]!==undefined?arguments[0]:defaultSize;if(!this||this.constructor!==Hash){return new Hash(size)}if(allowedSizes&&!allowedSizes.includes(size)){throw new Error(\"Unsupported hash length\")}var sponge=new _sponge[\"default\"]({capacity:size});this.update=function(input){var encoding=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"utf8\";if(_buffer.Buffer.isBuffer(input)){sponge.absorb(input);return _this}if(typeof input===\"string\"){return _this.update(_buffer.Buffer.from(input,encoding))}throw new TypeError(\"Not a string or buffer\")};this.digest=function(){var formatOrOptions=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"binary\";var options=typeof formatOrOptions===\"string\"?{format:formatOrOptions}:formatOrOptions;var buffer=sponge.squeeze({buffer:options.buffer,padding:options.padding||padding});if(options.format&&options.format!==\"binary\"){return buffer.toString(options.format)}return buffer};this.reset=function(){sponge.reset();return _this};return this}};var Keccak=createHash({allowedSizes:[224,256,384,512],defaultSize:512,padding:1});exports.Keccak=Keccak;var SHA3=createHash({allowedSizes:[224,256,384,512],defaultSize:512,padding:6});exports.SHA3=SHA3;var SHAKE=createHash({allowedSizes:[128,256],defaultSize:256,padding:31});exports.SHAKE=SHAKE;var SHA3Hash=Keccak;exports.SHA3Hash=SHA3Hash;SHA3.SHA3Hash=SHA3Hash;var _default=SHA3;exports[\"default\"]=_default;","export function hexToDecimal(hex: string) {\n  return BigInt(hex).toString();\n}\n","import { Keccak } from \"sha3\";\nimport { tinyBig, toChecksumAddress } from \"../..\";\nimport type {\n  ContractTypes,\n  JSONABIArgument,\n} from \"../../types/Contract.types\";\nimport { hexToDecimal } from \"./hexToDecimal\";\n\nexport const hexFalse = \"0\".repeat(64);\nconst hexTrue = \"0\".repeat(63) + \"1\";\n\n/**\n * Expands an integer type to use a default of 256 bits. Used for consistency; not required in Solidity\n */\nfunction expandType(type: ContractTypes) {\n  // https://docs.soliditylang.org/en/v0.8.7/types.html#integers\n  if (type === \"uint[]\") {\n    return \"uint256[]\";\n  } else if (type === \"int[]\") {\n    return \"int256[]\";\n  }\n  return type;\n}\n/**\n *\n * @param jsonABIArgument\n * @param args\n * @example\n */\nexport function encodeData(jsonABIArgument: JSONABIArgument, args: any[]) {\n  const hash = new Keccak(256);\n  const functionString = `${jsonABIArgument.name}(${jsonABIArgument.inputs.map(\n    (input) => expandType(input.type)\n  )})`;\n\n  const functionHash = hash.update(functionString).digest(\"hex\");\n  const jsonABIInputsLength = jsonABIArgument.inputs.length;\n  let shouldValidateInputLength = true;\n\n  // inputs contains 1 or more arrays\n  if (jsonABIArgument.inputs.find((input) => input.type.includes(\"[\"))) {\n    shouldValidateInputLength = false;\n  }\n  if (shouldValidateInputLength && args.length !== jsonABIInputsLength) {\n    throw new Error(\n      `args inputs  of \"${args.length}\" does not match expected length of \"${jsonABIArgument.inputs.length}\"`\n    );\n  }\n\n  const argsWithTypes: [arg: any, type: ContractTypes][] = (\n    jsonABIArgument.inputs || []\n  ).reduce((acc, input, i) => {\n    if (input.type.includes(\"[\")) {\n      // strip array and length like \"[2]\" from type\n      const basicType = /([^[]*)\\[.*$/g.exec(input.type)?.[1] as string;\n      args.forEach((arg: any) => {\n        acc = acc.concat([[arg, basicType]]);\n      });\n      return acc;\n    } else {\n      return acc.concat([[args[i], input.type]]);\n    }\n  }, [] as [arg: any, type: ContractTypes][]);\n\n  const encodedArgs = argsWithTypes.map(([arg, inputType]) => {\n    let rawArg = arg;\n    switch (inputType) {\n      case \"bool\":\n        return arg ? hexTrue : hexFalse;\n      case \"address\":\n        // remove leading \"0x\"\n        rawArg = arg.replace(/^0x/g, \"\").toLowerCase();\n        break;\n      default:\n        if (inputType.startsWith(\"bytes\")) {\n          // encode each character to hex\n          const argEncoded = rawArg\n            .split(\"\")\n            .map((character: string) => character.charCodeAt(0).toString(16))\n            .join(\"\");\n          const paddedEncodedArg = argEncoded.padEnd(64, \"0\");\n          return paddedEncodedArg;\n        } else if (inputType === \"uint256\") {\n          const argEncoded = BigInt(arg).toString(16);\n          const paddedEncodedArg = argEncoded.padStart(64, \"0\");\n          return paddedEncodedArg;\n        } else if (inputType.startsWith(\"uint\")) {\n          break;\n        } else {\n          throw new Error(\n            `essential-eth does not yet support \"${inputType}\" inputs. Make a PR today!\"`\n          );\n        }\n    }\n    const argEncoded = rawArg.toString(16) as string;\n    const paddedEncodedArg = argEncoded.padStart(64, \"0\");\n    return paddedEncodedArg;\n  });\n  const functionEncoded = functionHash.slice(0, 8);\n  const data = `0x${functionEncoded}${encodedArgs.join(\"\")}`;\n  return data;\n}\n\nexport function decodeRPCResponse(\n  jsonABIArgument: JSONABIArgument,\n  nodeResponse: string\n) {\n  const rawOutputs = jsonABIArgument.outputs;\n  // chunk response every 64 characters\n  const encodedOutputs = nodeResponse.slice(2).match(/.{1,64}/g);\n  const outputs = (encodedOutputs || []).map((output: string, i: number) => {\n    const outputType = (rawOutputs || [])[i].type;\n    switch (outputType) {\n      case \"bool\":\n        return output === hexTrue;\n      case \"address\":\n        /* address types have 26 leading zeroes to remove */\n        return toChecksumAddress(`0x${output.slice(24)}`);\n      case \"uint256\":\n      case \"uint120\":\n        return tinyBig(hexToDecimal(`0x${output}`));\n      case \"bytes32\":\n        return `0x${output}`;\n      case \"uint8\":\n        return Number(hexToDecimal(`0x${output}`));\n      default:\n        throw new Error(\n          `essential-eth does not yet support \"${outputType}\" outputs. Make a PR today!\"`\n        );\n    }\n  });\n\n  return outputs.length === 1 ? outputs[0] : outputs;\n}\n","import type { JsonRpcProvider } from \"../providers/JsonRpcProvider\";\nimport type { ContractInterface } from \"../types/Contract.types\";\nimport { decodeRPCResponse, encodeData } from \"./utils/encodeDecodeTransaction\";\n\nfunction estimateGas(txnData: string) {\n  txnData.split(\"\").reduce((previousValue, currentValue) => {\n    // 0 characters are 4 gwei, all others are 48 gwei\n    const characterCost = currentValue === \"0\" ? 4 : 68;\n    return previousValue + characterCost;\n  }, 0);\n}\ninterface Options {\n  gasLimit?: number;\n}\nexport class BaseContract {\n  private readonly _address: string;\n  private readonly _provider: JsonRpcProvider;\n\n  constructor(\n    addressOrName: string,\n    contractInterface: ContractInterface,\n    signerOrProvider: JsonRpcProvider\n  ) {\n    this._address = addressOrName;\n    this._provider = signerOrProvider;\n    contractInterface\n      .filter((jsonABIArgument) => jsonABIArgument.type === \"function\")\n      .forEach((jsonABIArgument) => {\n        if (\n          \"name\" in jsonABIArgument &&\n          typeof jsonABIArgument.name === \"string\"\n        ) {\n          defineReadOnly(\n            this,\n            jsonABIArgument.name,\n            async (..._args: any[]) => {\n              let functionArguments = _args;\n              let options: Options = {};\n              // remove options from encoding\n              const lastArg = _args[_args.length - 1];\n              if (!Array.isArray(lastArg) && typeof lastArg === \"object\") {\n                options = lastArg;\n                functionArguments = _args.slice(0, _args.length - 1);\n              }\n\n              const data = encodeData(jsonABIArgument, functionArguments);\n\n              const decimalGas =\n                typeof options.gasLimit === \"number\"\n                  ? options.gasLimit /* user passed in \"gasLimit\" directly */\n                  : typeof jsonABIArgument?.gas ===\n                    \"number\" /* ABI specified \"gas\". */\n                  ? estimateGas(data)\n                  : null;\n              const req = async (): Promise<string> => {\n                return await this._provider.call(\n                  {\n                    to: this._address.toLowerCase(),\n                    data,\n                    // sometimes gas is defined in the ABI\n                    ...(decimalGas\n                      ? { gas: `0x${decimalGas.toString(16)}` }\n                      : {}),\n                  },\n                  \"latest\"\n                );\n              };\n              const nodeResponse = await req();\n              return decodeRPCResponse(jsonABIArgument, nodeResponse);\n            }\n          );\n        }\n      });\n  }\n}\n\nexport function defineReadOnly<T>(object: T, name: string, value: any): void {\n  Object.defineProperty(object, name, {\n    enumerable: true,\n    value: value,\n    writable: false,\n  });\n}\nexport class Contract extends BaseContract {\n  readonly [key: string]: any;\n}\n","import { version } from \"./packageVersion\";\nclass Logger {\n  private packageVersion: string;\n  constructor() {\n    this.packageVersion = version;\n  }\n  public throwError(message: string, args: { [key: string]: any }): never {\n    const argsLength = Object.keys(args).length;\n    throw new Error(\n      `${message} (${Object.entries(args).map(\n        ([key, value], index) =>\n          `${key}=${value}${index < argsLength - 1 && \", \"}`\n      )}, version=essential-eth@${this.packageVersion})`\n    );\n  }\n  public throwArgumentError(message: string, arg: string, value: any): never {\n    throw new Error(\n      `${message} (argument=\"${arg}\" value=${value}, version=essential-eth@${this.packageVersion})`\n    );\n  }\n  public checkSafeUint53(value: number, message = \"value not safe\"): void {\n    if (typeof value !== \"number\") {\n      return;\n    }\n\n    if (value < 0 || value >= 0x1fffffffffffff) {\n      this.throwError(message, {\n        operation: \"checkSafeInteger\",\n        fault: \"out-of-safe-range\",\n        value: value,\n      });\n    }\n\n    if (value % 1) {\n      this.throwError(message, {\n        operation: \"checkSafeInteger\",\n        fault: \"non-integer\",\n        value: value,\n      });\n    }\n  }\n}\n\nexport const logger = new Logger();\n","export const version = \"0.6.2\";\n","/*\r\n *  big.js v6.2.1\r\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\r\n *  Copyright (c) 2022 Michael Mclaughlin\r\n *  https://github.com/MikeMcl/big.js/LICENCE.md\r\n */\r\n\r\n\r\n/************************************** EDITABLE DEFAULTS *****************************************/\r\n\r\n\r\n  // The default values below must be integers within the stated ranges.\r\n\r\n  /*\r\n   * The maximum number of decimal places (DP) of the results of operations involving division:\r\n   * div and sqrt, and pow with negative exponents.\r\n   */\r\nvar DP = 20,          // 0 to MAX_DP\r\n\r\n  /*\r\n   * The rounding mode (RM) used when rounding to the above decimal places.\r\n   *\r\n   *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\r\n   *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\r\n   *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\r\n   *  3  Away from zero.                                  (ROUND_UP)\r\n   */\r\n  RM = 1,             // 0, 1, 2 or 3\r\n\r\n  // The maximum value of DP and Big.DP.\r\n  MAX_DP = 1E6,       // 0 to 1000000\r\n\r\n  // The maximum magnitude of the exponent argument to the pow method.\r\n  MAX_POWER = 1E6,    // 1 to 1000000\r\n\r\n  /*\r\n   * The negative exponent (NE) at and beneath which toString returns exponential notation.\r\n   * (JavaScript numbers: -7)\r\n   * -1000000 is the minimum recommended exponent value of a Big.\r\n   */\r\n  NE = -7,            // 0 to -1000000\r\n\r\n  /*\r\n   * The positive exponent (PE) at and above which toString returns exponential notation.\r\n   * (JavaScript numbers: 21)\r\n   * 1000000 is the maximum recommended exponent value of a Big, but this limit is not enforced.\r\n   */\r\n  PE = 21,            // 0 to 1000000\r\n\r\n  /*\r\n   * When true, an error will be thrown if a primitive number is passed to the Big constructor,\r\n   * or if valueOf is called, or if toNumber is called on a Big which cannot be converted to a\r\n   * primitive number without a loss of precision.\r\n   */\r\n  STRICT = false,     // true or false\r\n\r\n\r\n/**************************************************************************************************/\r\n\r\n\r\n  // Error messages.\r\n  NAME = '[big.js] ',\r\n  INVALID = NAME + 'Invalid ',\r\n  INVALID_DP = INVALID + 'decimal places',\r\n  INVALID_RM = INVALID + 'rounding mode',\r\n  DIV_BY_ZERO = NAME + 'Division by zero',\r\n\r\n  // The shared prototype object.\r\n  P = {},\r\n  UNDEFINED = void 0,\r\n  NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\r\n\r\n\r\n/*\r\n * Create and return a Big constructor.\r\n */\r\nfunction _Big_() {\r\n\r\n  /*\r\n   * The Big constructor and exported function.\r\n   * Create and return a new instance of a Big number object.\r\n   *\r\n   * n {number|string|Big} A numeric value.\r\n   */\r\n  function Big(n) {\r\n    var x = this;\r\n\r\n    // Enable constructor usage without new.\r\n    if (!(x instanceof Big)) return n === UNDEFINED ? _Big_() : new Big(n);\r\n\r\n    // Duplicate.\r\n    if (n instanceof Big) {\r\n      x.s = n.s;\r\n      x.e = n.e;\r\n      x.c = n.c.slice();\r\n    } else {\r\n      if (typeof n !== 'string') {\r\n        if (Big.strict === true && typeof n !== 'bigint') {\r\n          throw TypeError(INVALID + 'value');\r\n        }\r\n\r\n        // Minus zero?\r\n        n = n === 0 && 1 / n < 0 ? '-0' : String(n);\r\n      }\r\n\r\n      parse(x, n);\r\n    }\r\n\r\n    // Retain a reference to this Big constructor.\r\n    // Shadow Big.prototype.constructor which points to Object.\r\n    x.constructor = Big;\r\n  }\r\n\r\n  Big.prototype = P;\r\n  Big.DP = DP;\r\n  Big.RM = RM;\r\n  Big.NE = NE;\r\n  Big.PE = PE;\r\n  Big.strict = STRICT;\r\n  Big.roundDown = 0;\r\n  Big.roundHalfUp = 1;\r\n  Big.roundHalfEven = 2;\r\n  Big.roundUp = 3;\r\n\r\n  return Big;\r\n}\r\n\r\n\r\n/*\r\n * Parse the number or string value passed to a Big constructor.\r\n *\r\n * x {Big} A Big number instance.\r\n * n {number|string} A numeric value.\r\n */\r\nfunction parse(x, n) {\r\n  var e, i, nl;\r\n\r\n  if (!NUMERIC.test(n)) {\r\n    throw Error(INVALID + 'number');\r\n  }\r\n\r\n  // Determine sign.\r\n  x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\r\n\r\n  // Decimal point?\r\n  if ((e = n.indexOf('.')) > -1) n = n.replace('.', '');\r\n\r\n  // Exponential form?\r\n  if ((i = n.search(/e/i)) > 0) {\r\n\r\n    // Determine exponent.\r\n    if (e < 0) e = i;\r\n    e += +n.slice(i + 1);\r\n    n = n.substring(0, i);\r\n  } else if (e < 0) {\r\n\r\n    // Integer.\r\n    e = n.length;\r\n  }\r\n\r\n  nl = n.length;\r\n\r\n  // Determine leading zeros.\r\n  for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\r\n\r\n  if (i == nl) {\r\n\r\n    // Zero.\r\n    x.c = [x.e = 0];\r\n  } else {\r\n\r\n    // Determine trailing zeros.\r\n    for (; nl > 0 && n.charAt(--nl) == '0';);\r\n    x.e = e - i - 1;\r\n    x.c = [];\r\n\r\n    // Convert string to array of digits without leading/trailing zeros.\r\n    for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Round Big x to a maximum of sd significant digits using rounding mode rm.\r\n *\r\n * x {Big} The Big to round.\r\n * sd {number} Significant digits: integer, 0 to MAX_DP inclusive.\r\n * rm {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n * [more] {boolean} Whether the result of division was truncated.\r\n */\r\nfunction round(x, sd, rm, more) {\r\n  var xc = x.c;\r\n\r\n  if (rm === UNDEFINED) rm = x.constructor.RM;\r\n  if (rm !== 0 && rm !== 1 && rm !== 2 && rm !== 3) {\r\n    throw Error(INVALID_RM);\r\n  }\r\n\r\n  if (sd < 1) {\r\n    more =\r\n      rm === 3 && (more || !!xc[0]) || sd === 0 && (\r\n      rm === 1 && xc[0] >= 5 ||\r\n      rm === 2 && (xc[0] > 5 || xc[0] === 5 && (more || xc[1] !== UNDEFINED))\r\n    );\r\n\r\n    xc.length = 1;\r\n\r\n    if (more) {\r\n\r\n      // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n      x.e = x.e - sd + 1;\r\n      xc[0] = 1;\r\n    } else {\r\n\r\n      // Zero.\r\n      xc[0] = x.e = 0;\r\n    }\r\n  } else if (sd < xc.length) {\r\n\r\n    // xc[sd] is the digit after the digit that may be rounded up.\r\n    more =\r\n      rm === 1 && xc[sd] >= 5 ||\r\n      rm === 2 && (xc[sd] > 5 || xc[sd] === 5 &&\r\n        (more || xc[sd + 1] !== UNDEFINED || xc[sd - 1] & 1)) ||\r\n      rm === 3 && (more || !!xc[0]);\r\n\r\n    // Remove any digits after the required precision.\r\n    xc.length = sd;\r\n\r\n    // Round up?\r\n    if (more) {\r\n\r\n      // Rounding up may mean the previous digit has to be rounded up.\r\n      for (; ++xc[--sd] > 9;) {\r\n        xc[sd] = 0;\r\n        if (sd === 0) {\r\n          ++x.e;\r\n          xc.unshift(1);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (sd = xc.length; !xc[--sd];) xc.pop();\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Return a string representing the value of Big x in normal or exponential notation.\r\n * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\r\n */\r\nfunction stringify(x, doExponential, isNonzero) {\r\n  var e = x.e,\r\n    s = x.c.join(''),\r\n    n = s.length;\r\n\r\n  // Exponential notation?\r\n  if (doExponential) {\r\n    s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\r\n\r\n  // Normal notation.\r\n  } else if (e < 0) {\r\n    for (; ++e;) s = '0' + s;\r\n    s = '0.' + s;\r\n  } else if (e > 0) {\r\n    if (++e > n) {\r\n      for (e -= n; e--;) s += '0';\r\n    } else if (e < n) {\r\n      s = s.slice(0, e) + '.' + s.slice(e);\r\n    }\r\n  } else if (n > 1) {\r\n    s = s.charAt(0) + '.' + s.slice(1);\r\n  }\r\n\r\n  return x.s < 0 && isNonzero ? '-' + s : s;\r\n}\r\n\r\n\r\n// Prototype/instance methods\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the absolute value of this Big.\r\n */\r\nP.abs = function () {\r\n  var x = new this.constructor(this);\r\n  x.s = 1;\r\n  return x;\r\n};\r\n\r\n\r\n/*\r\n * Return 1 if the value of this Big is greater than the value of Big y,\r\n *       -1 if the value of this Big is less than the value of Big y, or\r\n *        0 if they have the same value.\r\n */\r\nP.cmp = function (y) {\r\n  var isneg,\r\n    x = this,\r\n    xc = x.c,\r\n    yc = (y = new x.constructor(y)).c,\r\n    i = x.s,\r\n    j = y.s,\r\n    k = x.e,\r\n    l = y.e;\r\n\r\n  // Either zero?\r\n  if (!xc[0] || !yc[0]) return !xc[0] ? !yc[0] ? 0 : -j : i;\r\n\r\n  // Signs differ?\r\n  if (i != j) return i;\r\n\r\n  isneg = i < 0;\r\n\r\n  // Compare exponents.\r\n  if (k != l) return k > l ^ isneg ? 1 : -1;\r\n\r\n  j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n  // Compare digit by digit.\r\n  for (i = -1; ++i < j;) {\r\n    if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\r\n  }\r\n\r\n  // Compare lengths.\r\n  return k == l ? 0 : k > l ^ isneg ? 1 : -1;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\r\n * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n */\r\nP.div = function (y) {\r\n  var x = this,\r\n    Big = x.constructor,\r\n    a = x.c,                  // dividend\r\n    b = (y = new Big(y)).c,   // divisor\r\n    k = x.s == y.s ? 1 : -1,\r\n    dp = Big.DP;\r\n\r\n  if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n    throw Error(INVALID_DP);\r\n  }\r\n\r\n  // Divisor is zero?\r\n  if (!b[0]) {\r\n    throw Error(DIV_BY_ZERO);\r\n  }\r\n\r\n  // Dividend is 0? Return +-0.\r\n  if (!a[0]) {\r\n    y.s = k;\r\n    y.c = [y.e = 0];\r\n    return y;\r\n  }\r\n\r\n  var bl, bt, n, cmp, ri,\r\n    bz = b.slice(),\r\n    ai = bl = b.length,\r\n    al = a.length,\r\n    r = a.slice(0, bl),   // remainder\r\n    rl = r.length,\r\n    q = y,                // quotient\r\n    qc = q.c = [],\r\n    qi = 0,\r\n    p = dp + (q.e = x.e - y.e) + 1;    // precision of the result\r\n\r\n  q.s = k;\r\n  k = p < 0 ? 0 : p;\r\n\r\n  // Create version of divisor with leading zero.\r\n  bz.unshift(0);\r\n\r\n  // Add zeros to make remainder as long as divisor.\r\n  for (; rl++ < bl;) r.push(0);\r\n\r\n  do {\r\n\r\n    // n is how many times the divisor goes into current remainder.\r\n    for (n = 0; n < 10; n++) {\r\n\r\n      // Compare divisor and remainder.\r\n      if (bl != (rl = r.length)) {\r\n        cmp = bl > rl ? 1 : -1;\r\n      } else {\r\n        for (ri = -1, cmp = 0; ++ri < bl;) {\r\n          if (b[ri] != r[ri]) {\r\n            cmp = b[ri] > r[ri] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // If divisor < remainder, subtract divisor from remainder.\r\n      if (cmp < 0) {\r\n\r\n        // Remainder can't be more than 1 digit longer than divisor.\r\n        // Equalise lengths using divisor with extra leading zero?\r\n        for (bt = rl == bl ? b : bz; rl;) {\r\n          if (r[--rl] < bt[rl]) {\r\n            ri = rl;\r\n            for (; ri && !r[--ri];) r[ri] = 9;\r\n            --r[ri];\r\n            r[rl] += 10;\r\n          }\r\n          r[rl] -= bt[rl];\r\n        }\r\n\r\n        for (; !r[0];) r.shift();\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    // Add the digit n to the result array.\r\n    qc[qi++] = cmp ? n : ++n;\r\n\r\n    // Update the remainder.\r\n    if (r[0] && cmp) r[rl] = a[ai] || 0;\r\n    else r = [a[ai]];\r\n\r\n  } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\r\n\r\n  // Leading zero? Do not remove if result is simply zero (qi == 1).\r\n  if (!qc[0] && qi != 1) {\r\n\r\n    // There can't be more than one zero.\r\n    qc.shift();\r\n    q.e--;\r\n    p--;\r\n  }\r\n\r\n  // Round?\r\n  if (qi > p) round(q, p, Big.RM, r[0] !== UNDEFINED);\r\n\r\n  return q;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\r\n */\r\nP.eq = function (y) {\r\n  return this.cmp(y) === 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Big is greater than the value of Big y, otherwise return\r\n * false.\r\n */\r\nP.gt = function (y) {\r\n  return this.cmp(y) > 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\r\n * return false.\r\n */\r\nP.gte = function (y) {\r\n  return this.cmp(y) > -1;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Big is less than the value of Big y, otherwise return false.\r\n */\r\nP.lt = function (y) {\r\n  return this.cmp(y) < 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\r\n * return false.\r\n */\r\nP.lte = function (y) {\r\n  return this.cmp(y) < 1;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big minus the value of Big y.\r\n */\r\nP.minus = P.sub = function (y) {\r\n  var i, j, t, xlty,\r\n    x = this,\r\n    Big = x.constructor,\r\n    a = x.s,\r\n    b = (y = new Big(y)).s;\r\n\r\n  // Signs differ?\r\n  if (a != b) {\r\n    y.s = -b;\r\n    return x.plus(y);\r\n  }\r\n\r\n  var xc = x.c.slice(),\r\n    xe = x.e,\r\n    yc = y.c,\r\n    ye = y.e;\r\n\r\n  // Either zero?\r\n  if (!xc[0] || !yc[0]) {\r\n    if (yc[0]) {\r\n      y.s = -b;\r\n    } else if (xc[0]) {\r\n      y = new Big(x);\r\n    } else {\r\n      y.s = 1;\r\n    }\r\n    return y;\r\n  }\r\n\r\n  // Determine which is the bigger number. Prepend zeros to equalise exponents.\r\n  if (a = xe - ye) {\r\n\r\n    if (xlty = a < 0) {\r\n      a = -a;\r\n      t = xc;\r\n    } else {\r\n      ye = xe;\r\n      t = yc;\r\n    }\r\n\r\n    t.reverse();\r\n    for (b = a; b--;) t.push(0);\r\n    t.reverse();\r\n  } else {\r\n\r\n    // Exponents equal. Check digit by digit.\r\n    j = ((xlty = xc.length < yc.length) ? xc : yc).length;\r\n\r\n    for (a = b = 0; b < j; b++) {\r\n      if (xc[b] != yc[b]) {\r\n        xlty = xc[b] < yc[b];\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  // x < y? Point xc to the array of the bigger number.\r\n  if (xlty) {\r\n    t = xc;\r\n    xc = yc;\r\n    yc = t;\r\n    y.s = -y.s;\r\n  }\r\n\r\n  /*\r\n   * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\r\n   * needs to start at yc.length.\r\n   */\r\n  if ((b = (j = yc.length) - (i = xc.length)) > 0) for (; b--;) xc[i++] = 0;\r\n\r\n  // Subtract yc from xc.\r\n  for (b = i; j > a;) {\r\n    if (xc[--j] < yc[j]) {\r\n      for (i = j; i && !xc[--i];) xc[i] = 9;\r\n      --xc[i];\r\n      xc[j] += 10;\r\n    }\r\n\r\n    xc[j] -= yc[j];\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  for (; xc[--b] === 0;) xc.pop();\r\n\r\n  // Remove leading zeros and adjust exponent accordingly.\r\n  for (; xc[0] === 0;) {\r\n    xc.shift();\r\n    --ye;\r\n  }\r\n\r\n  if (!xc[0]) {\r\n\r\n    // n - n = +0\r\n    y.s = 1;\r\n\r\n    // Result must be zero.\r\n    xc = [ye = 0];\r\n  }\r\n\r\n  y.c = xc;\r\n  y.e = ye;\r\n\r\n  return y;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big modulo the value of Big y.\r\n */\r\nP.mod = function (y) {\r\n  var ygtx,\r\n    x = this,\r\n    Big = x.constructor,\r\n    a = x.s,\r\n    b = (y = new Big(y)).s;\r\n\r\n  if (!y.c[0]) {\r\n    throw Error(DIV_BY_ZERO);\r\n  }\r\n\r\n  x.s = y.s = 1;\r\n  ygtx = y.cmp(x) == 1;\r\n  x.s = a;\r\n  y.s = b;\r\n\r\n  if (ygtx) return new Big(x);\r\n\r\n  a = Big.DP;\r\n  b = Big.RM;\r\n  Big.DP = Big.RM = 0;\r\n  x = x.div(y);\r\n  Big.DP = a;\r\n  Big.RM = b;\r\n\r\n  return this.minus(x.times(y));\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big negated.\r\n */\r\nP.neg = function () {\r\n  var x = new this.constructor(this);\r\n  x.s = -x.s;\r\n  return x;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big plus the value of Big y.\r\n */\r\nP.plus = P.add = function (y) {\r\n  var e, k, t,\r\n    x = this,\r\n    Big = x.constructor;\r\n\r\n  y = new Big(y);\r\n\r\n  // Signs differ?\r\n  if (x.s != y.s) {\r\n    y.s = -y.s;\r\n    return x.minus(y);\r\n  }\r\n\r\n  var xe = x.e,\r\n    xc = x.c,\r\n    ye = y.e,\r\n    yc = y.c;\r\n\r\n  // Either zero?\r\n  if (!xc[0] || !yc[0]) {\r\n    if (!yc[0]) {\r\n      if (xc[0]) {\r\n        y = new Big(x);\r\n      } else {\r\n        y.s = x.s;\r\n      }\r\n    }\r\n    return y;\r\n  }\r\n\r\n  xc = xc.slice();\r\n\r\n  // Prepend zeros to equalise exponents.\r\n  // Note: reverse faster than unshifts.\r\n  if (e = xe - ye) {\r\n    if (e > 0) {\r\n      ye = xe;\r\n      t = yc;\r\n    } else {\r\n      e = -e;\r\n      t = xc;\r\n    }\r\n\r\n    t.reverse();\r\n    for (; e--;) t.push(0);\r\n    t.reverse();\r\n  }\r\n\r\n  // Point xc to the longer array.\r\n  if (xc.length - yc.length < 0) {\r\n    t = yc;\r\n    yc = xc;\r\n    xc = t;\r\n  }\r\n\r\n  e = yc.length;\r\n\r\n  // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\r\n  for (k = 0; e; xc[e] %= 10) k = (xc[--e] = xc[e] + yc[e] + k) / 10 | 0;\r\n\r\n  // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n\r\n  if (k) {\r\n    xc.unshift(k);\r\n    ++ye;\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  for (e = xc.length; xc[--e] === 0;) xc.pop();\r\n\r\n  y.c = xc;\r\n  y.e = ye;\r\n\r\n  return y;\r\n};\r\n\r\n\r\n/*\r\n * Return a Big whose value is the value of this Big raised to the power n.\r\n * If n is negative, round to a maximum of Big.DP decimal places using rounding\r\n * mode Big.RM.\r\n *\r\n * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\r\n */\r\nP.pow = function (n) {\r\n  var x = this,\r\n    one = new x.constructor('1'),\r\n    y = one,\r\n    isneg = n < 0;\r\n\r\n  if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) {\r\n    throw Error(INVALID + 'exponent');\r\n  }\r\n\r\n  if (isneg) n = -n;\r\n\r\n  for (;;) {\r\n    if (n & 1) y = y.times(x);\r\n    n >>= 1;\r\n    if (!n) break;\r\n    x = x.times(x);\r\n  }\r\n\r\n  return isneg ? one.div(y) : y;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big rounded to a maximum precision of sd\r\n * significant digits using rounding mode rm, or Big.RM if rm is not specified.\r\n *\r\n * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n */\r\nP.prec = function (sd, rm) {\r\n  if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n    throw Error(INVALID + 'precision');\r\n  }\r\n  return round(new this.constructor(this), sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big rounded to a maximum of dp decimal places\r\n * using rounding mode rm, or Big.RM if rm is not specified.\r\n * If dp is negative, round to an integer which is a multiple of 10**-dp.\r\n * If dp is not specified, round to 0 decimal places.\r\n *\r\n * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\r\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n */\r\nP.round = function (dp, rm) {\r\n  if (dp === UNDEFINED) dp = 0;\r\n  else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) {\r\n    throw Error(INVALID_DP);\r\n  }\r\n  return round(new this.constructor(this), dp + this.e + 1, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the square root of the value of this Big, rounded, if\r\n * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n */\r\nP.sqrt = function () {\r\n  var r, c, t,\r\n    x = this,\r\n    Big = x.constructor,\r\n    s = x.s,\r\n    e = x.e,\r\n    half = new Big('0.5');\r\n\r\n  // Zero?\r\n  if (!x.c[0]) return new Big(x);\r\n\r\n  // Negative?\r\n  if (s < 0) {\r\n    throw Error(NAME + 'No square root');\r\n  }\r\n\r\n  // Estimate.\r\n  s = Math.sqrt(x + '');\r\n\r\n  // Math.sqrt underflow/overflow?\r\n  // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\r\n  if (s === 0 || s === 1 / 0) {\r\n    c = x.c.join('');\r\n    if (!(c.length + e & 1)) c += '0';\r\n    s = Math.sqrt(c);\r\n    e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\r\n    r = new Big((s == 1 / 0 ? '5e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\r\n  } else {\r\n    r = new Big(s + '');\r\n  }\r\n\r\n  e = r.e + (Big.DP += 4);\r\n\r\n  // Newton-Raphson iteration.\r\n  do {\r\n    t = r;\r\n    r = half.times(t.plus(x.div(t)));\r\n  } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\r\n\r\n  return round(r, (Big.DP -= 4) + r.e + 1, Big.RM);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Big whose value is the value of this Big times the value of Big y.\r\n */\r\nP.times = P.mul = function (y) {\r\n  var c,\r\n    x = this,\r\n    Big = x.constructor,\r\n    xc = x.c,\r\n    yc = (y = new Big(y)).c,\r\n    a = xc.length,\r\n    b = yc.length,\r\n    i = x.e,\r\n    j = y.e;\r\n\r\n  // Determine sign of result.\r\n  y.s = x.s == y.s ? 1 : -1;\r\n\r\n  // Return signed 0 if either 0.\r\n  if (!xc[0] || !yc[0]) {\r\n    y.c = [y.e = 0];\r\n    return y;\r\n  }\r\n\r\n  // Initialise exponent of result as x.e + y.e.\r\n  y.e = i + j;\r\n\r\n  // If array xc has fewer digits than yc, swap xc and yc, and lengths.\r\n  if (a < b) {\r\n    c = xc;\r\n    xc = yc;\r\n    yc = c;\r\n    j = a;\r\n    a = b;\r\n    b = j;\r\n  }\r\n\r\n  // Initialise coefficient array of result with zeros.\r\n  for (c = new Array(j = a + b); j--;) c[j] = 0;\r\n\r\n  // Multiply.\r\n\r\n  // i is initially xc.length.\r\n  for (i = b; i--;) {\r\n    b = 0;\r\n\r\n    // a is yc.length.\r\n    for (j = a + i; j > i;) {\r\n\r\n      // Current sum of products at this digit position, plus carry.\r\n      b = c[j] + yc[i] * xc[j - i - 1] + b;\r\n      c[j--] = b % 10;\r\n\r\n      // carry\r\n      b = b / 10 | 0;\r\n    }\r\n\r\n    c[j] = b;\r\n  }\r\n\r\n  // Increment result exponent if there is a final carry, otherwise remove leading zero.\r\n  if (b) ++y.e;\r\n  else c.shift();\r\n\r\n  // Remove trailing zeros.\r\n  for (i = c.length; !c[--i];) c.pop();\r\n  y.c = c;\r\n\r\n  return y;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Big in exponential notation rounded to dp fixed\r\n * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n *\r\n * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n */\r\nP.toExponential = function (dp, rm) {\r\n  var x = this,\r\n    n = x.c[0];\r\n\r\n  if (dp !== UNDEFINED) {\r\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n    x = round(new x.constructor(x), ++dp, rm);\r\n    for (; x.c.length < dp;) x.c.push(0);\r\n  }\r\n\r\n  return stringify(x, true, !!n);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Big in normal notation rounded to dp fixed\r\n * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n *\r\n * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n *\r\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n */\r\nP.toFixed = function (dp, rm) {\r\n  var x = this,\r\n    n = x.c[0];\r\n\r\n  if (dp !== UNDEFINED) {\r\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n    x = round(new x.constructor(x), dp + x.e + 1, rm);\r\n\r\n    // x.e may have changed if the value is rounded up.\r\n    for (dp = dp + x.e + 1; x.c.length < dp;) x.c.push(0);\r\n  }\r\n\r\n  return stringify(x, false, !!n);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Big.\r\n * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n * Omit the sign for negative zero.\r\n */\r\nP[Symbol.for('nodejs.util.inspect.custom')] = P.toJSON = P.toString = function () {\r\n  var x = this,\r\n    Big = x.constructor;\r\n  return stringify(x, x.e <= Big.NE || x.e >= Big.PE, !!x.c[0]);\r\n};\r\n\r\n\r\n/*\r\n * Return the value of this Big as a primitve number.\r\n */\r\nP.toNumber = function () {\r\n  var n = Number(stringify(this, true, true));\r\n  if (this.constructor.strict === true && !this.eq(n.toString())) {\r\n    throw Error(NAME + 'Imprecise conversion');\r\n  }\r\n  return n;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Big rounded to sd significant digits using\r\n * rounding mode rm, or Big.RM if rm is not specified.\r\n * Use exponential notation if sd is less than the number of digits necessary to represent\r\n * the integer part of the value in normal notation.\r\n *\r\n * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n */\r\nP.toPrecision = function (sd, rm) {\r\n  var x = this,\r\n    Big = x.constructor,\r\n    n = x.c[0];\r\n\r\n  if (sd !== UNDEFINED) {\r\n    if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n      throw Error(INVALID + 'precision');\r\n    }\r\n    x = round(new Big(x), sd, rm);\r\n    for (; x.c.length < sd;) x.c.push(0);\r\n  }\r\n\r\n  return stringify(x, sd <= x.e || x.e <= Big.NE || x.e >= Big.PE, !!n);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Big.\r\n * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n * Include the sign for negative zero.\r\n */\r\nP.valueOf = function () {\r\n  var x = this,\r\n    Big = x.constructor;\r\n  if (Big.strict === true) {\r\n    throw Error(NAME + 'valueOf disallowed');\r\n  }\r\n  return stringify(x, x.e <= Big.NE || x.e >= Big.PE, true);\r\n};\r\n\r\n\r\n// Export\r\n\r\n\r\nexport var Big = _Big_();\r\n\r\n/// <reference types=\"https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/master/types/big.js/index.d.ts\" />\r\nexport default Big;\r\n","/**\n * Strips both leading and trailing zeroes from a number string\n */\nfunction stripTrailingZeroes(numberString: string) {\n  const isNegative = numberString.startsWith(\"-\");\n  numberString = numberString.replace(\"-\", \"\");\n\n  numberString = numberString.replace(\n    /\\.0*$/g,\n    \"\" /* for numbers like \"1.0\" -> \"1\" */\n  );\n  numberString = numberString.replace(/^0+/, \"\");\n  // for numbers like \"1.10\" -> \"1.1\"\n  if (numberString.includes(\".\")) {\n    numberString = numberString.replace(/0+$/, \"\");\n  }\n  if (numberString.startsWith(\".\")) {\n    // so that \".1\" returns as \"0.1\"\n    numberString = `0${numberString}`;\n  }\n  return `${isNegative ? \"-\" : \"\"}${numberString}`;\n}\n\n/**\n * Converts a string in scientific notation formatting to string in decimal format\n */\nexport function scientificStrToDecimalStr(scientificString: string): string {\n  // Does not contain \"e\" nor \"E\"\n  if (!scientificString.match(/e/i /* lowercase and uppercase E */)) {\n    return stripTrailingZeroes(scientificString);\n  }\n\n  // eslint-disable-next-line prefer-const\n  let [base, power] = scientificString.split(\n    /e/i /* lowercase and uppercase E */\n  );\n\n  // remove the leading \"-\" if negative\n  const isNegative = Number(base) < 0;\n  base = base.replace(\"-\", \"\");\n\n  base = stripTrailingZeroes(base);\n  const [wholeNumber, fraction /* move decimal this many places */ = \"\"] =\n    base.split(\".\");\n  if (Number(power) === 0) {\n    return `${isNegative ? \"-\" : \"\"}${stripTrailingZeroes(base)}`;\n  } else {\n    const includesDecimal = base.includes(\".\");\n    if (!includesDecimal) {\n      base = `${base}.`;\n    }\n    base = base.replace(\".\", \"\");\n    const baseLength = base.length;\n    let splitPaddedNumber;\n    if (Number(power) < 0) {\n      // move decimal left\n      if (wholeNumber.length < Math.abs(Number(power))) {\n        base = base.padStart(\n          baseLength + Math.abs(Number(power)) - wholeNumber.length,\n          \"0\"\n        );\n      }\n      splitPaddedNumber = base.split(\"\");\n      if (wholeNumber.length < Math.abs(Number(power))) {\n        // starts with zeroes\n        splitPaddedNumber = [\".\", ...splitPaddedNumber];\n      } else {\n        splitPaddedNumber.splice(\n          splitPaddedNumber.length - Math.abs(Number(power)),\n          0,\n          \".\"\n        );\n      }\n    } else {\n      // move decimal right\n      if (fraction.length < Math.abs(Number(power))) {\n        base = base.padEnd(\n          baseLength + Math.abs(Number(power)) - fraction.length,\n          \"0\"\n        );\n      }\n      splitPaddedNumber = base.split(\"\");\n      if (fraction.length > Math.abs(Number(power))) {\n        splitPaddedNumber.splice(\n          splitPaddedNumber.length - Math.abs(Number(power)),\n          0,\n          \".\"\n        );\n      }\n    }\n    const toReturn = stripTrailingZeroes(splitPaddedNumber.join(\"\"));\n    return `${isNegative ? \"-\" : \"\"}${toReturn}`;\n  }\n}\n","import Big from \"big.js\";\nimport { hexToDecimal } from \"../../classes/utils/hexToDecimal\";\nimport { scientificStrToDecimalStr } from \"./helpers\";\nexport class TinyBig extends Big {\n  constructor(value: string | number | TinyBig | Big) {\n    if (typeof value === \"string\" && value.startsWith(\"0x\")) {\n      value = hexToDecimal(value);\n    }\n    super(value);\n  }\n  /**\n   * Used anytime you're passing in \"value\" to ethers or web3\n   */\n  toHexString(): string {\n    return `0x${BigInt(this.toString()).toString(16)}`;\n  }\n  toNumber(): number {\n    return Number(scientificStrToDecimalStr(super.toString()));\n  }\n\n  toString(): string {\n    if (this.toNumber() === 0) {\n      return \"0\";\n    }\n    return scientificStrToDecimalStr(super.toString());\n  }\n\n  /**\n   * Eithers pads or shortens a string to a specified length\n   */\n  private padAndChop = (\n    str: string,\n    padChar: string,\n    length: number\n  ): string => {\n    return (Array(length).fill(padChar).join(\"\") + str).slice(length * -1);\n  };\n\n  public toTwos(bitCount: number): Big {\n    let binaryStr;\n\n    if (this.gte(0)) {\n      const twosComp = this.toNumber().toString(2);\n      binaryStr = this.padAndChop(twosComp, \"0\", bitCount || twosComp.length);\n    } else {\n      binaryStr = this.plus(Math.pow(2, bitCount)).toNumber().toString(2);\n\n      if (Number(binaryStr) < 0) {\n        throw new Error(\"Cannot calculate twos complement\");\n      }\n    }\n\n    const binary = `0b${binaryStr}`;\n    const decimal = Number(binary);\n    return tinyBig(decimal);\n  }\n}\n\n/**\n * Helper factory function so that you don't have to type \"new\" when instantiating a new TinyBig\n */\nexport function tinyBig(value: string | number | TinyBig | Big): TinyBig {\n  return new TinyBig(value);\n}\n","import { tinyBig, toChecksumAddress } from \"../..\";\nimport type {\n  RPCTransaction,\n  TransactionResponse,\n} from \"../../types/Transaction.types\";\nimport { hexToDecimal } from \"./hexToDecimal\";\n\n/**\n * Converts RPC transaction response to more JS-friendly format\n */\nexport function cleanTransaction(\n  transaction: RPCTransaction\n): TransactionResponse {\n  const cleanedTransaction = {\n    ...transaction,\n  } as unknown as TransactionResponse;\n  (Object.keys(transaction) as Array<keyof RPCTransaction>).forEach((key) => {\n    // pending blocks have null instead of a difficulty\n    // pending blocks have null instead of a miner address\n    if (!transaction[key]) return;\n    switch (key) {\n      case \"blockNumber\":\n      case \"chainId\":\n      case \"transactionIndex\":\n      case \"type\":\n      case \"v\":\n        cleanedTransaction[key] = Number(hexToDecimal(transaction[key]));\n        break;\n      case \"from\":\n      case \"to\":\n        if (transaction[key]) {\n          cleanedTransaction[key] = toChecksumAddress(transaction[key]);\n        }\n        break;\n      case \"value\":\n      case \"gas\":\n      case \"gasPrice\":\n      case \"maxFeePerGas\":\n      case \"maxPriorityFeePerGas\":\n      case \"nonce\":\n        cleanedTransaction[key] = tinyBig(hexToDecimal(transaction[key]));\n        break;\n    }\n  });\n  return cleanedTransaction;\n}\n","type JSPrimitiveTypes =\n  | \"string\"\n  | \"number\"\n  | \"bigint\"\n  | \"boolean\"\n  | \"symbol\"\n  | \"undefined\"\n  | \"object\"\n  | \"function\";\n\nexport const validateType = (\n  value: unknown,\n  allowedTypes: JSPrimitiveTypes[]\n) => {\n  if (!allowedTypes.includes(typeof value)) {\n    throw new Error(\n      `${allowedTypes.join(\" or \")} required. Received ${typeof value}`\n    );\n  }\n};\n","import { Keccak } from \"sha3\";\nimport { validateType } from \"../shared/validateTypes\";\n\n/**\n * Returns an Ethereum address in proper mixed-case checksum.\n\n * inspired from [\"getAddress\" in ethers.js](https://docs.ethers.io/v5/api/utils/address/#utils-getAddress)\n *\n * inspired from [\"toChecksumAddress\" in web3.js](https://web3js.readthedocs.io/en/v1.7.1/web3-utils.html#tochecksumaddress)\n */\nexport function toChecksumAddress(address: string) {\n  validateType(address, [\"string\"]);\n  if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n    throw new Error(`Invalid Ethereum address \"${address}\"`);\n  }\n\n  const _address = address.toLowerCase().replace(/^0x/i, \"\");\n  const keccak = new Keccak(256);\n  const addressHash = keccak.update(_address).digest(\"hex\").replace(/^0x/i, \"\");\n  let checksumAddress = \"0x\";\n\n  for (let i = 0; i < _address.length; i++) {\n    // If ith character is 8 to f then make it uppercase\n    if (parseInt(addressHash[i], 16) > 7) {\n      checksumAddress += _address[i].toUpperCase();\n    } else {\n      checksumAddress += _address[i];\n    }\n  }\n\n  if (\n    address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) &&\n    checksumAddress !== address\n  ) {\n    throw new Error(`Invalid Checksum address for \"${address}\"`);\n  }\n  return checksumAddress;\n}\n","import { toChecksumAddress } from \"../../utils/toChecksumAddress\";\nimport type { Log, RPCLog } from \"./../../types/Transaction.types\";\nimport { hexToDecimal } from \"./hexToDecimal\";\n\n/**\n * Converts RPC log receipt response to more JS-friendly format\n */\nexport function cleanLog(log: RPCLog, receiptLog: boolean): Log {\n  const cleanedLog = {\n    ...log,\n  } as unknown as Log;\n\n  (Object.keys(log) as Array<keyof RPCLog>).forEach((key) => {\n    switch (key) {\n      case \"address\":\n        cleanedLog[key] = toChecksumAddress(log[key]);\n        break;\n      case \"blockNumber\":\n      case \"logIndex\":\n      case \"transactionIndex\":\n        cleanedLog[key] = Number(hexToDecimal(log[key]));\n        break;\n      case \"removed\":\n        if (receiptLog) {\n          delete cleanedLog[key];\n        } else if (log[key] == null) {\n          cleanedLog[key] === false;\n        }\n        break;\n    }\n  });\n\n  return cleanedLog;\n}\n","export default function(e,n){return n=n||{},new Promise(function(t,r){var s=new XMLHttpRequest,o=[],u=[],i={},a=function(){return{ok:2==(s.status/100|0),statusText:s.statusText,status:s.status,url:s.responseURL,text:function(){return Promise.resolve(s.responseText)},json:function(){return Promise.resolve(s.responseText).then(JSON.parse)},blob:function(){return Promise.resolve(new Blob([s.response]))},clone:a,headers:{keys:function(){return o},entries:function(){return u},get:function(e){return i[e.toLowerCase()]},has:function(e){return e.toLowerCase()in i}}}};for(var l in s.open(n.method||\"get\",e,!0),s.onload=function(){s.getAllResponseHeaders().replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm,function(e,n,t){o.push(n=n.toLowerCase()),u.push([n,t]),i[n]=i[n]?i[n]+\",\"+t:t}),t(a())},s.onerror=r,s.withCredentials=\"include\"==n.credentials,n.headers)s.setRequestHeader(l,n.headers[l]);s.send(n.body||null)})}\n//# sourceMappingURL=unfetch.module.js.map\n","module.exports = self.fetch || (self.fetch = require('unfetch').default || require('unfetch'));\n","import unfetch from \"isomorphic-unfetch\";\n/**\n * Makes a post request with the specified JSON data, normally to the a AURORA JSON RPC API endpoint\n */\nexport function post(url: string, body: Record<string, unknown>) {\n  return unfetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(body),\n  })\n    .then(async (r) => {\n      const t = await r.text();\n      try {\n        return JSON.parse(t);\n      } catch {\n        throw new Error(`Invalid JSON RPC response: \"${t}\"`);\n      }\n    })\n    .then((response) => {\n      const result = response?.result;\n      if (!result) {\n        throw new Error(\n          `Invalid JSON RPC response: ${JSON.stringify(response)}`\n        );\n      }\n      return response.result;\n    });\n}\n\ntype RPCMethodName =\n  | \"eth_getBlockByNumber\"\n  | \"eth_getBlockByHash\"\n  | \"eth_call\"\n  | \"eth_chainId\"\n  | \"eth_gasPrice\"\n  | \"eth_getBalance\"\n  | \"eth_getTransactionByHash\"\n  | \"eth_getTransactionReceipt\"\n  | \"eth_getTransactionCount\"\n  | \"eth_getCode\"\n  | \"eth_blockNumber\"\n  | \"eth_estimateGas\"\n  | \"eth_getLogs\";\n\n/**\n * Prepares data to be sent using the {@link post} function. Data is prepared per the {@link https://en.wikipedia.org/wiki/JSON-RPC#Examples JSON RPC v2 spec}\n */\nexport function buildRPCPostBody(method: RPCMethodName, params: unknown[]) {\n  return {\n    jsonrpc: \"2.0\",\n    // TODO: Increment ID will be needed when websocket support is added\n    id: 1,\n    method,\n    params,\n  };\n}\n","// inspired from https://github.com/ethers-io/ethers.js/blob/f599d6f23dad0d0acaa3828d6b7acaab2d5e455b/packages/bytes/src.ts/index.ts\nimport { logger } from \"../logger/logger\";\n\nexport type Bytes = ArrayLike<number>;\n\nexport type BytesLike = Bytes | string;\nexport type BytesLikeWithNumber = BytesLike | number;\n\nexport interface DataOptions {\n  allowMissingPrefix?: boolean;\n  hexPad?: \"left\" | \"right\" | null;\n}\n\nexport interface Hexable {\n  toHexString(): string;\n}\n\nexport type SignatureLike =\n  | {\n      r: string;\n      s?: string;\n      _vs?: string;\n      recoveryParam?: number;\n      v?: number;\n    }\n  | BytesLike;\n\nexport interface Signature {\n  r: string;\n\n  s: string;\n  _vs: string;\n\n  recoveryParam: number;\n  v: number;\n\n  yParityAndS: string;\n  compact: string;\n}\n\n/**\n * Check if a value can be converted to a hex string\n */\nfunction isHexable(value: any): value is Hexable {\n  return !!value.toHexString;\n}\n\n/**\n * Returns true if and only if value is a valid [Bytes](#bytes) or DataHexString\n * Same as [`ethers.utils.isBytesLike`](https://docs.ethers.io/v5/api/utils/bytes/#utils-isBytesLike)\n */\nexport function isBytesLike(value: any): value is BytesLike {\n  return (isHexString(value) && !(value.length % 2)) || isBytes(value);\n}\n\n/**\n * Checks if a value is an integer\n */\nfunction isInteger(value: number) {\n  return typeof value === \"number\" && value == value && value % 1 === 0;\n}\n\n/**\n * Returns true if and only if value is a valid [Bytes](#bytes)\n * Same as [`ethers.utils.isBytes`](https://docs.ethers.io/v5/api/utils/bytes/#utils-isBytes)\n */\nexport function isBytes(value: any): value is Bytes {\n  if (value == null) {\n    return false;\n  }\n\n  if (value.constructor === Uint8Array) {\n    return true;\n  }\n  if (typeof value === \"string\") {\n    return false;\n  }\n  if (!isInteger(value.length) || value.length < 0) {\n    return false;\n  }\n\n  for (let i = 0; i < value.length; i++) {\n    const v = value[i];\n    if (!isInteger(v) || v < 0 || v >= 256) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Converts DataHexStringOrArrayish to a Uint8Array\n * Same as [`ethers.utils.arrayify`](https://docs.ethers.io/v5/api/utils/bytes/#utils-arrayify)\n */\nexport function arrayify(\n  value: BytesLike | Hexable | number,\n  options?: DataOptions\n): Uint8Array {\n  if (!options) {\n    options = {};\n  }\n\n  if (typeof value === \"number\") {\n    logger.checkSafeUint53(value, \"invalid arrayify value\");\n\n    const result = [];\n    while (value) {\n      result.unshift(value & 0xff);\n      value = parseInt(String(value / 256));\n    }\n    if (result.length === 0) {\n      result.push(0);\n    }\n\n    return new Uint8Array(result);\n  }\n\n  if (\n    options.allowMissingPrefix &&\n    typeof value === \"string\" &&\n    value.substring(0, 2) !== \"0x\"\n  ) {\n    value = \"0x\" + value;\n  }\n\n  if (isHexable(value)) {\n    value = value.toHexString();\n  }\n\n  if (isHexString(value)) {\n    let hex = (<string>value).substring(2);\n    if (hex.length % 2) {\n      if (options.hexPad === \"left\") {\n        hex = \"0\" + hex;\n      } else if (options.hexPad === \"right\") {\n        hex += \"0\";\n      } else {\n        logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n      }\n    }\n\n    const result = [];\n    for (let i = 0; i < hex.length; i += 2) {\n      result.push(parseInt(hex.substring(i, i + 2), 16));\n    }\n\n    return new Uint8Array(result);\n  }\n\n  if (isBytes(value)) {\n    return new Uint8Array(value);\n  }\n\n  return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\n\n/**\n * Concatenates all the BytesLike in arrayOfBytesLike into a single Uint8Array.\n * Same as [`ethers.utils.concat`](https://docs.ethers.io/v5/api/utils/bytes/#utils-concat)\n */\nexport function concat(\n  arrayOfBytesLike: ReadonlyArray<BytesLikeWithNumber>\n): Uint8Array {\n  const objects = arrayOfBytesLike.map((item) => arrayify(item));\n  const length = objects.reduce((accum, item) => accum + item.length, 0);\n  const result = new Uint8Array(length);\n  objects.reduce((offset, object) => {\n    result.set(object, offset);\n    return offset + object.length;\n  }, 0);\n  return result;\n}\n\n/**\n * Strips leading zeros from a BytesLike object\n */\nexport function stripZeros(value: BytesLike): Uint8Array {\n  let result: Uint8Array = arrayify(value);\n\n  if (result.length === 0) {\n    return result;\n  }\n\n  // Find the first non-zero entry\n  let start = 0;\n  while (start < result.length && result[start] === 0) {\n    start++;\n  }\n\n  // If we started with zeros, strip them\n  if (start) {\n    result = result.slice(start);\n  }\n\n  return result;\n}\n\n/**\n * Pads the beginning of a {@link BytesLike} with zeros so it's the specified length as a Uint8Array\n */\nexport function zeroPad(value: BytesLike, length: number): Uint8Array {\n  value = arrayify(value);\n\n  if (value.length > length) {\n    logger.throwArgumentError(\"value out of range\", \"value\", value);\n  }\n\n  const result = new Uint8Array(length);\n  result.set(value, length - value.length);\n  return result;\n}\n\n/**\n * Returns true if and only if object is a valid hex string.\n * If length is specified and object is not a valid DataHexString of length bytes, an InvalidArgument error is thrown.\n * Same as [`ethers.utils.isHexString`](https://docs.ethers.io/v5/api/utils/bytes/#utils-isHexString)\n */\nexport function isHexString(value: any, length?: number): boolean {\n  if (typeof value !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n  return true;\n}\n\nconst HexCharacters = \"0123456789abcdef\";\n\n/**\n * Converts a value into a hex string\n */\nexport function hexlify(\n  value: BytesLike | Hexable | number | bigint,\n  options?: DataOptions\n): string {\n  if (!options) {\n    options = {};\n  }\n\n  if (typeof value === \"number\") {\n    logger.checkSafeUint53(value, \"invalid hexlify value\");\n\n    let hex = \"\";\n    while (value) {\n      hex = HexCharacters[value & 0xf] + hex;\n      value = Math.floor(value / 16);\n    }\n\n    if (hex.length) {\n      if (hex.length % 2) {\n        hex = \"0\" + hex;\n      }\n      return \"0x\" + hex;\n    }\n\n    return \"0x00\";\n  }\n\n  if (typeof value === \"bigint\") {\n    value = value.toString(16);\n    if (value.length % 2) {\n      return \"0x0\" + value;\n    }\n    return \"0x\" + value;\n  }\n\n  if (\n    options.allowMissingPrefix &&\n    typeof value === \"string\" &&\n    value.substring(0, 2) !== \"0x\"\n  ) {\n    value = \"0x\" + value;\n  }\n\n  if (isHexable(value)) {\n    return value.toHexString();\n  }\n\n  if (isHexString(value)) {\n    if ((<string>value).length % 2) {\n      if (options.hexPad === \"left\") {\n        value = \"0x0\" + (<string>value).substring(2);\n      } else if (options.hexPad === \"right\") {\n        value += \"0\";\n      } else {\n        logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n      }\n    }\n    return (<string>value).toLowerCase();\n  }\n\n  if (isBytes(value)) {\n    let result = \"0x\";\n    for (let i = 0; i < value.length; i++) {\n      const v = value[i];\n      result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n    }\n    return result;\n  }\n\n  return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n\n/**\n * Gets the length of data represented as a hex string\n */\nexport function hexDataLength(data: BytesLike) {\n  if (typeof data !== \"string\") {\n    data = hexlify(data);\n  } else if (!isHexString(data) || data.length % 2) {\n    return null;\n  }\n\n  return (data.length - 2) / 2;\n}\n\n/**\n * Slices a {@link BytesLike} to extract a certain part of the input\n */\nexport function hexDataSlice(\n  data: BytesLikeWithNumber,\n  offset: number,\n  endOffset?: number\n): string {\n  if (typeof data !== \"string\") {\n    data = hexlify(data);\n  } else if (!isHexString(data) || data.length % 2) {\n    logger.throwArgumentError(\"invalid hexData\", \"value\", data);\n  }\n\n  offset = 2 + 2 * offset;\n\n  if (endOffset != null) {\n    return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n  }\n\n  return \"0x\" + data.substring(offset);\n}\n\n/**\n * Concatenates values together into one hex string\n */\nexport function hexConcat(items: ReadonlyArray<BytesLike>): string {\n  let result = \"0x\";\n  items.forEach((item) => {\n    result += hexlify(item).substring(2);\n  });\n  return result;\n}\n\n/**\n * Converts a number of different types into a hex string\n */\nexport function hexValue(value: BytesLike | Hexable | number | bigint): string {\n  const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n  if (trimmed === \"0x\") {\n    return \"0x0\";\n  }\n  return trimmed;\n}\n\n/**\n * Strips the leading zeros from a value and returns it as a hex string\n */\nexport function hexStripZeros(value: BytesLike): string {\n  if (typeof value !== \"string\") {\n    value = hexlify(value);\n  }\n\n  if (!isHexString(value)) {\n    logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n  }\n  value = value.substring(2);\n  let offset = 0;\n  while (offset < value.length && value[offset] === \"0\") {\n    offset++;\n  }\n  return \"0x\" + value.substring(offset);\n}\n\n/**\n * Returns a hex string padded to a specified length of bytes.\n */\nexport function hexZeroPad(value: BytesLikeWithNumber, length: number): string {\n  if (typeof value !== \"string\") {\n    value = hexlify(value);\n  } else if (!isHexString(value)) {\n    logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n  }\n\n  if (value.length > 2 * length + 2) {\n    logger.throwError(\"value out of range\", { value, length });\n  }\n\n  while (value.length < 2 * length + 2) {\n    value = \"0x0\" + value.substring(2);\n  }\n\n  return value;\n}\n","import Big from \"big.js\";\nimport { TinyBig } from \"../../shared/tinyBig/tinyBig\";\nimport { hexlify } from \"../../utils/bytes\";\nimport type {\n  RPCTransactionRequest,\n  TransactionRequest,\n} from \"./../../types/Transaction.types\";\nimport type { BytesLike } from \"./../../utils/bytes\";\n\n/**\n * @param transaction\n * @example\n */\nexport function prepareTransaction(\n  transaction: TransactionRequest\n): RPCTransactionRequest {\n  const preparedTransaction = {\n    ...transaction,\n  } as unknown as RPCTransactionRequest;\n  (Object.keys(transaction) as Array<keyof TransactionRequest>).forEach(\n    (key) => {\n      switch (key) {\n        case \"gas\":\n        case \"gasPrice\":\n        case \"nonce\":\n        case \"maxFeePerGas\":\n        case \"maxPriorityFeePerGas\":\n        case \"value\": {\n          const value = transaction[key];\n          if (value instanceof TinyBig) {\n            preparedTransaction[key] = value.toHexString();\n          } else if (value instanceof Big) {\n            preparedTransaction[key] = `0x${BigInt(value.toString()).toString(\n              16\n            )}`;\n          } else if (typeof transaction[key] === \"number\")\n            preparedTransaction[key] =\n              \"0x\" + (transaction[key] as any).toString(16);\n          else preparedTransaction[key] = (transaction[key] as any).toString();\n          break;\n        }\n        case \"data\":\n          preparedTransaction[key] = hexlify(transaction[key] as BytesLike);\n          break;\n      }\n    }\n  );\n  return preparedTransaction;\n}\n","export default {\n  \"1313161554\": [\"aurora-mainnet\"],\n  \"1313161555\": [\"aurora-testnet\"],\n  \"1313161556\": [\"aurora-localnet\"],\n};\n","import { cleanBlock } from \"../classes/utils/cleanBlock\";\nimport { cleanLog } from \"../classes/utils/cleanLog\";\nimport { cleanTransaction } from \"../classes/utils/cleanTransaction\";\nimport { cleanTransactionReceipt } from \"../classes/utils/cleanTransactionReceipt\";\nimport { buildRPCPostBody, post } from \"../classes/utils/fetchers\";\nimport { hexToDecimal } from \"../classes/utils/hexToDecimal\";\nimport { prepareTransaction } from \"../classes/utils/prepareTransaction\";\nimport { logger } from \"../logger/logger\";\nimport type { TinyBig } from \"../shared/tinyBig/tinyBig\";\nimport { tinyBig } from \"../shared/tinyBig/tinyBig\";\nimport type { BlockResponse, BlockTag, RPCBlock } from \"../types/Block.types\";\nimport type { Filter, FilterByBlockHash } from \"../types/Filter.types\";\nimport type { Network } from \"../types/Network.types\";\nimport type {\n  Log,\n  RPCLog,\n  RPCTransaction,\n  RPCTransactionReceipt,\n  TransactionReceipt,\n  TransactionRequest,\n  TransactionResponse,\n} from \"../types/Transaction.types\";\nimport chainsInfo from \"./utils/chainsInfo\";\n\n/**\n * Converts a block tag into the right format when needed.\n */\nfunction prepBlockTag(blockTag: BlockTag): string {\n  return typeof blockTag === \"number\"\n    ? tinyBig(blockTag).toHexString()\n    : blockTag;\n}\n\nexport abstract class BaseProvider {\n  /**\n   * ignore\n   */\n  abstract selectRpcUrl(): string;\n  abstract post(body: Record<string, unknown>): Promise<any>;\n\n  /**\n   * @ignore\n   */\n  readonly _rpcUrls: string[] = [];\n  /**\n   * @ignore\n   */\n  protected _post = (body: Record<string, unknown>) =>\n    post(this.selectRpcUrl(), body);\n\n  /**\n   * @param rpcUrls The URL(s) to your Eth node(s). Consider POKT or Infura\n   */\n  constructor(rpcUrls: string[]) {\n    this._rpcUrls = rpcUrls;\n  }\n\n  /**\n   * Gets information (name, chainId, and ensAddress when applicable) about the network the provider is connected to.\n   *\n   * * [Identical](/docs/api#isd) to [`ethers.provider.getNetwork`](https://docs.ethers.io/v5/api/providers/provider/#Provider-getNetwork) in ethers.js\n   * * [Similar](/docs/api#isd) to [`web3.eth.getChainId`](https://web3js.readthedocs.io/en/v1.7.3/web3-eth.html#getchainid) in web3.js, returns more than just the `chainId`\n   */\n  public async getNetwork(): Promise<Network> {\n    const hexChainId = (await this.post(\n      buildRPCPostBody(\"eth_chainId\", [])\n    )) as string;\n\n    const chainId = hexToDecimal(hexChainId);\n    const info = (chainsInfo as any)[chainId];\n    return {\n      chainId: Number(chainId),\n      name: info[0] || \"unknown\",\n      ensAddress: info[1] || null, // only send ensAddress if it exists\n    };\n  }\n\n  /**\n   * Gets the number of the most recently mined block on the network the provider is connected to.\n   */\n  public async getBlockNumber(): Promise<number> {\n    const currentBlockNumber = (await this.post(\n      buildRPCPostBody(\"eth_blockNumber\", [])\n    )) as string;\n    return Number(hexToDecimal(currentBlockNumber));\n  }\n\n  /**\n   * Gets information about a specified transaction, even if it hasn't been mined yet.\n   */\n  public async getTransaction(\n    transactionHash: string\n  ): Promise<TransactionResponse> {\n    const [rpcTransaction, blockNumber] = await Promise.all([\n      this.post(\n        buildRPCPostBody(\"eth_getTransactionByHash\", [transactionHash])\n      ) as Promise<RPCTransaction>,\n      this.getBlock(\"latest\"),\n    ]);\n    const cleanedTransaction = cleanTransaction(rpcTransaction);\n    // https://ethereum.stackexchange.com/questions/2881/how-to-get-the-transaction-confirmations-using-the-json-rpc\n    cleanedTransaction.confirmations =\n      blockNumber.number - cleanedTransaction.blockNumber + 1;\n    return cleanedTransaction;\n  }\n\n  /**\n   * Gives information about a transaction that has already been mined. Includes additional information beyond what's provided by [`getTransaction`](/docs/api/modules#gettransaction).\n   */\n  public async getTransactionReceipt(\n    transactionHash: string\n  ): Promise<TransactionReceipt> {\n    const [rpcTransaction, blockNumber] = await Promise.all([\n      this.post(\n        buildRPCPostBody(\"eth_getTransactionReceipt\", [transactionHash])\n      ) as Promise<RPCTransactionReceipt>,\n      this.getBlock(\"latest\"),\n    ]);\n    const cleanedTransactionReceipt = cleanTransactionReceipt(rpcTransaction);\n    cleanedTransactionReceipt.confirmations =\n      blockNumber.number - cleanedTransactionReceipt.blockNumber + 1;\n    return cleanedTransactionReceipt;\n  }\n\n  /**\n   * Returns the number of sent transactions by an address, from genesis (or as far back as a provider looks) up to specified block.\n   */\n  public async getTransactionCount(\n    address: string,\n    blockTag: BlockTag = \"latest\"\n  ): Promise<number> {\n    blockTag = prepBlockTag(blockTag);\n    const transactionCount = (await this.post(\n      buildRPCPostBody(\"eth_getTransactionCount\", [address, blockTag])\n    )) as string;\n    return Number(hexToDecimal(transactionCount));\n  }\n\n  /**\n   * Gets information about a certain block, optionally with full transaction objects.\n   */\n  public async getBlock(\n    timeFrame: BlockTag = \"latest\",\n    returnTransactionObjects = false\n  ): Promise<BlockResponse> {\n    let type: \"Number\" | \"Hash\" = \"Number\";\n    if (typeof timeFrame === \"string\" && timeFrame.length === 66) {\n      // use endpoint that accepts string\n      type = \"Hash\";\n    } else {\n      timeFrame = prepBlockTag(timeFrame);\n    }\n\n    const rpcBlock = (await this.post(\n      buildRPCPostBody(`eth_getBlockBy${type}`, [\n        timeFrame,\n        returnTransactionObjects,\n      ])\n    )) as RPCBlock;\n\n    return cleanBlock(rpcBlock, returnTransactionObjects);\n  }\n\n  /**\n   * Gives an estimate of the current gas price in wei.\n   */\n  public async getGasPrice(): Promise<TinyBig> {\n    const hexGasPrice = (await this.post(\n      buildRPCPostBody(\"eth_gasPrice\", [])\n    )) as string;\n    return tinyBig(hexToDecimal(hexGasPrice));\n  }\n\n  /**\n   * Returns the balance of the account in wei.\n   */\n  public async getBalance(\n    address: string,\n    blockTag: BlockTag = \"latest\"\n  ): Promise<TinyBig> {\n    blockTag = prepBlockTag(blockTag);\n    const hexBalance = (await this.post(\n      buildRPCPostBody(\"eth_getBalance\", [address, blockTag])\n    )) as string;\n    return tinyBig(hexToDecimal(hexBalance));\n  }\n\n  /**\n   * Gets the code of a contract on a specified block.\n   */\n  public async getCode(\n    address: string,\n    blockTag: BlockTag = \"latest\"\n  ): Promise<string> {\n    blockTag = prepBlockTag(blockTag);\n    const contractCode = (await this.post(\n      buildRPCPostBody(\"eth_getCode\", [address, blockTag])\n    )) as string;\n    return contractCode;\n  }\n\n  /**\n   * Returns an estimate of the amount of gas that would be required to submit transaction to the network.\n   * An estimate may not be accurate since there could be another transaction on the network that was not accounted for.\n   */\n  public async estimateGas(transaction: TransactionRequest): Promise<TinyBig> {\n    const rpcTransaction = prepareTransaction(transaction);\n    const gasUsed = (await this.post(\n      buildRPCPostBody(\"eth_estimateGas\", [rpcTransaction])\n    )) as string;\n    return tinyBig(hexToDecimal(gasUsed));\n  }\n\n  /**\n   * Returns transaction receipt event logs that match a specified filter.\n   * May return `[]` if parameters are too broad, even if logs exist.\n   */\n  public async getLogs(\n    filter: Filter | FilterByBlockHash\n  ): Promise<Array<Log>> {\n    const filterByRange = filter as Filter;\n    if (filterByRange.fromBlock)\n      filterByRange.fromBlock = prepBlockTag(filterByRange.fromBlock);\n    if (filterByRange.toBlock)\n      filterByRange.toBlock = prepBlockTag(filterByRange.toBlock);\n\n    const rpcLogs = (await this.post(\n      buildRPCPostBody(\"eth_getLogs\", [filter])\n    )) as Array<RPCLog>;\n    const logs = rpcLogs.map((log) => cleanLog(log, false));\n    return logs;\n  }\n\n  /**\n   * Returns the result of adding a transaction to the blockchain without actually adding that transaction to the blockchain.\n   * Does not require any ether as gas.\n   */\n  public async call(\n    transaction: TransactionRequest,\n    blockTag: BlockTag = \"latest\"\n  ): Promise<string> {\n    if (\n      transaction.gasPrice &&\n      (transaction.maxPriorityFeePerGas || transaction.maxFeePerGas)\n    ) {\n      logger.throwError(\n        'Cannot specify both \"gasPrice\" and (\"maxPriorityFeePerGas\" or \"maxFeePerGas\")',\n        {\n          gasPrice: transaction.gasPrice,\n          maxFeePerGas: transaction.maxFeePerGas,\n          maxPriorityFeePerGas: transaction.maxPriorityFeePerGas,\n        }\n      );\n    }\n    if (transaction.maxFeePerGas && transaction.maxPriorityFeePerGas) {\n      logger.throwError(\n        'Cannot specify both \"maxFeePerGas\" and \"maxPriorityFeePerGas\"',\n        {\n          maxFeePerGas: transaction.maxFeePerGas,\n          maxPriorityFeePerGas: transaction.maxPriorityFeePerGas,\n        }\n      );\n    }\n    blockTag = prepBlockTag(blockTag);\n    const rpcTransaction = prepareTransaction(transaction);\n    const transactionRes = (await this.post(\n      buildRPCPostBody(\"eth_call\", [rpcTransaction, blockTag])\n    )) as string;\n    return transactionRes;\n  }\n}\n","import { tinyBig, toChecksumAddress } from \"../..\";\nimport type {\n  Log,\n  RPCLog,\n  RPCTransactionReceipt,\n  TransactionReceipt,\n} from \"../../types/Transaction.types\";\nimport { cleanLog } from \"./cleanLog\";\nimport { cleanTransaction } from \"./cleanTransaction\";\nimport { hexToDecimal } from \"./hexToDecimal\";\n\n/**\n * Converts RPC transaction receipt response to more JS-friendly format\n */\nexport function cleanTransactionReceipt(\n  transactionReceipt: RPCTransactionReceipt\n): TransactionReceipt {\n  const cleanedTransaction = cleanTransaction(transactionReceipt as any);\n  const cleanedTransactionReceipt = {\n    ...cleanedTransaction,\n  } as unknown as TransactionReceipt;\n  (\n    Object.keys(transactionReceipt) as Array<keyof RPCTransactionReceipt>\n  ).forEach((key) => {\n    if (!transactionReceipt[key]) return;\n    switch (key) {\n      case \"status\":\n        cleanedTransactionReceipt[key] = Number(\n          hexToDecimal(transactionReceipt[key])\n        );\n        break;\n      case \"contractAddress\":\n        if (transactionReceipt[key]) {\n          cleanedTransactionReceipt[key] = toChecksumAddress(\n            transactionReceipt[key]\n          );\n        }\n        break;\n      case \"cumulativeGasUsed\":\n      case \"effectiveGasPrice\":\n      case \"gasUsed\":\n        cleanedTransactionReceipt[key] = tinyBig(\n          hexToDecimal(transactionReceipt[key])\n        );\n        break;\n      case \"logs\":\n        transactionReceipt[key].forEach((log: RPCLog, index: number) => {\n          cleanedTransactionReceipt[key][index] = cleanLog(log, true) as Log;\n        });\n    }\n  });\n  cleanedTransactionReceipt.byzantium =\n    cleanedTransactionReceipt.blockNumber >= 4370000;\n  return cleanedTransactionReceipt;\n}\n","import type { BlockResponse } from \"../..\";\nimport { toChecksumAddress } from \"../..\";\nimport { tinyBig } from \"../../shared/tinyBig/tinyBig\";\nimport type { RPCBlock } from \"../../types/Block.types\";\nimport type { RPCTransaction } from \"../../types/Transaction.types\";\nimport { cleanTransaction } from \"./cleanTransaction\";\nimport { hexToDecimal } from \"./hexToDecimal\";\n\n/**\n * Converts RPC block response to more JS-friendly format\n */\nexport function cleanBlock(\n  block: RPCBlock,\n  returnTransactionObjects: boolean\n): BlockResponse {\n  const cleanedBlock = { ...block } as unknown as BlockResponse;\n  (Object.keys(block) as Array<keyof RPCBlock>).forEach((key) => {\n    // pending blocks have null instead of a difficulty\n    // pending blocks have null instead of a miner address\n    if (!block[key]) return;\n    switch (key) {\n      case \"difficulty\":\n      case \"totalDifficulty\":\n      case \"gasLimit\":\n      case \"gasUsed\":\n      case \"size\":\n      case \"timestamp\":\n      case \"baseFeePerGas\":\n        cleanedBlock[key] = tinyBig(hexToDecimal(block[key]));\n        break;\n      case \"number\":\n        cleanedBlock[key] = Number(hexToDecimal(block[key]));\n        break;\n      case \"miner\":\n        cleanedBlock[key] = toChecksumAddress(block[key]);\n        break;\n    }\n  });\n  // for all full transactions\n  if (returnTransactionObjects) {\n    const txns = block.transactions as RPCTransaction[];\n    txns.forEach((transaction, index) => {\n      cleanedBlock.transactions[index] = cleanTransaction(transaction);\n    });\n  }\n  return cleanedBlock;\n}\n","import { logger } from \"../logger/logger\";\nimport { BaseProvider } from \"./BaseProvider\";\n\n// https://advancedweb.hu/how-to-add-timeout-to-a-promise-in-javascript/\nconst promiseTimeout = (prom: Promise<any>, time: number) =>\n  Promise.race([\n    prom,\n    new Promise((_r, reject) =>\n      setTimeout(() => reject(\"Promise timed out\"), time)\n    ),\n  ]);\n\nexport interface ConstructorOptions {\n  timeoutDuration?: number;\n}\nconst DEFAULT_TIMEOUT_DURATION = 8000;\n\nexport class FallthroughProvider extends BaseProvider {\n  // index of current trusted rpc url\n  /**\n   * @ignore\n   */\n  private rpcUrlCounter = 0;\n  private readonly timeoutDuration: number;\n  /**\n   * @ignore\n   */\n  public selectRpcUrl(): string {\n    return this._rpcUrls[this.rpcUrlCounter];\n  }\n\n  constructor(rpcUrls: string[], options: ConstructorOptions = {}) {\n    if (!Array.isArray(rpcUrls)) {\n      logger.throwError(\"Array required\", { rpcUrls });\n    }\n    if (rpcUrls.length <= 1) {\n      logger.throwError(\"More than one rpcUrl is required\", { rpcUrls });\n    }\n    super(rpcUrls);\n    this.timeoutDuration = options.timeoutDuration || DEFAULT_TIMEOUT_DURATION;\n  }\n\n  /**\n   * @ignore\n   */\n  public post = (body: Record<string, unknown>): Promise<any> => {\n    // while failing post, add to rpcUrlCounter and post again\n    const genesisCount = this.rpcUrlCounter;\n\n    const recursivePostRetry = (): Promise<any> => {\n      // Times out request\n      const genesisRpcUrl = this.selectRpcUrl();\n      const res = promiseTimeout(this._post(body), this.timeoutDuration).catch(\n        (e) => {\n          if (genesisRpcUrl === this.selectRpcUrl()) {\n            this.rpcUrlCounter =\n              (this.rpcUrlCounter + 1) % this._rpcUrls.length;\n          }\n          if (this.rpcUrlCounter === genesisCount) {\n            throw e;\n          }\n          return recursivePostRetry();\n        }\n      );\n      return res;\n    };\n    return recursivePostRetry();\n  };\n}\n","import { BaseProvider } from \"./BaseProvider\";\nexport class JsonRpcProvider extends BaseProvider {\n  /**\n   * @ignore\n   */\n  selectRpcUrl(): string {\n    return this._rpcUrls[0];\n  }\n\n  /**\n   * @ignore\n   */\n  post(body: Record<string, unknown>): Promise<any> {\n    return this._post(body);\n  }\n\n  constructor(rpcUrl = \"https://testnet.aurora.dev\") {\n    super([rpcUrl]);\n  }\n}\n\nexport function jsonRpcProvider(rpcUrl?: string) {\n  return new JsonRpcProvider(rpcUrl);\n}\n","import { Keccak } from \"sha3\";\nimport type { BytesLike } from \"./bytes\";\n\n/**\n * Hashes data into a Keccak256 hex string\n */\nexport function keccak256(data: BytesLike): string {\n  let bufferableData;\n  if (typeof data === \"string\") {\n    bufferableData = Buffer.from(data.replace(/^0x/, \"\"), \"hex\");\n  } else {\n    bufferableData = Buffer.from(data as any);\n  }\n  const keccak = new Keccak(256);\n  const addressHash = \"0x\" + keccak.update(bufferableData).digest(\"hex\");\n  return addressHash;\n}\n","/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst CURVE = Object.freeze({\n    a: _0n,\n    b: BigInt(7),\n    P: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n});\nexport { CURVE };\nfunction weistrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass ShaError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(B * B);\n        const x1b = X1 + B;\n        const D = mod(_2n * (mod(x1b * x1b) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E * E);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H * H);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r * r - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        const P0 = JacobianPoint.ZERO;\n        if (typeof scalar === 'bigint' && scalar === _0n)\n            return P0;\n        let n = normalizeScalar(scalar);\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.ZERO;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ = invert(this.z)) {\n        const { x, y, z } = this;\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    hasEvenY() {\n        return this.y % _2n === _0n;\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weistrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, 33));\n        const y = bytesToNumber(bytes.subarray(33, 65));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === 32 || (len === 33 && (header === 0x02 || header === 0x03))) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === 65 && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-33 compressed bytes or 65 uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        msgHash = ensureBytes(msgHash);\n        const h = truncateHash(msgHash);\n        const { r, s } = normalizeSignature(signature);\n        if (recovery !== 0 && recovery !== 1) {\n            throw new Error('Cannot recover signature: invalid recovery bit');\n        }\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(r));\n        const { n } = CURVE;\n        const rinv = invert(r, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.hasEvenY() ? '02' : '03';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weistrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = hex instanceof Uint8Array;\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = hex instanceof Uint8Array;\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, CURVE.n - this.s) : this;\n    }\n    toDERRawBytes(isCompressed = false) {\n        return hexToBytes(this.toDERHex(isCompressed));\n    }\n    toDERHex(isCompressed = false) {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        if (isCompressed)\n            return sHex;\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const rLen = numberToHexUnpadded(rHex.length / 2);\n        const sLen = numberToHexUnpadded(sHex.length / 2);\n        const length = numberToHexUnpadded(rHex.length / 2 + sHex.length / 2 + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every((b) => b instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nfunction numTo32bStr(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    if (!(_0n <= num && num < POW_2_256))\n        throw new Error('Expected number < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    const b = hexToBytes(numTo32bStr(num));\n    if (b.length !== 32)\n        throw new Error('Error: expected 32 bytes');\n    return b;\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    return pow2(t2, _2n);\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst ENDO = {\n    a1: BigInt('0x3086d221a7d46bcde86c90e49284eb15'),\n    b1: -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3'),\n    a2: BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8'),\n    b2: BigInt('0x3086d221a7d46bcde86c90e49284eb15'),\n    POW_2_128: BigInt('0x100000000000000000000000000000000'),\n};\nfunction splitScalarEndo(k) {\n    const { n } = CURVE;\n    const { a1, b1, a2, b2, POW_2_128 } = ENDO;\n    const c1 = divNearest(b2 * k, n);\n    const c2 = divNearest(-b1 * k, n);\n    let k1 = mod(k - c1 * a1 - c2 * a2, n);\n    let k2 = mod(-c1 * b1 - c2 * b2, n);\n    const k1neg = k1 > POW_2_128;\n    const k2neg = k2 > POW_2_128;\n    if (k1neg)\n        k1 = n - k1;\n    if (k2neg)\n        k2 = n - k2;\n    if (k1 > POW_2_128 || k2 > POW_2_128) {\n        throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n    }\n    return { k1neg, k1, k2neg, k2 };\n}\nfunction truncateHash(hash) {\n    const { n } = CURVE;\n    const byteLength = hash.length;\n    const delta = byteLength * 8 - 256;\n    let h = bytesToNumber(hash);\n    if (delta > 0)\n        h = h >> BigInt(delta);\n    if (h >= n)\n        h -= n;\n    return h;\n}\nlet _sha256Sync;\nlet _hmacSha256Sync;\nclass HmacDrbg {\n    constructor() {\n        this.v = new Uint8Array(32).fill(1);\n        this.k = new Uint8Array(32).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        return _hmacSha256Sync(this.k, ...values);\n    }\n    checkSync() {\n        if (typeof _hmacSha256Sync !== 'function')\n            throw new ShaError('hmacSha256Sync needs to be set');\n    }\n    incr() {\n        if (this.counter >= 1000)\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.checkSync();\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        this.v = await this.hmac(this.v);\n        return this.v;\n    }\n    generateSync() {\n        this.checkSync();\n        this.incr();\n        this.v = this.hmacSync(this.v);\n        return this.v;\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d) {\n    const k = bytesToNumber(kBytes);\n    if (!isWithinCurveOrder(k))\n        return;\n    const { n } = CURVE;\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(invert(k, n) * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    const sig = new Signature(r, s);\n    const recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 64)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (key instanceof Uint8Array) {\n        if (key.length !== 32)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nfunction isProbPub(item) {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === 33 || len === 65;\n    if (str)\n        return len === 66 || len === 130;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isProbPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isProbPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > 32 ? bytes.slice(0, 32) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    return numTo32b(num);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(32);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== 32)\n            throw new Error('sign: Expected 32 bytes of extra data');\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    let { sig, recovery } = recSig;\n    const { canonical, der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    if (canonical && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    await drbg.reseed(seed);\n    while (!(sig = kmdToSig(await drbg.generate(), m, d)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    drbg.reseedSync(seed);\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nfunction schnorrChallengeFinalize(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nclass InternalSchnorrSignature {\n    constructor(message, privateKey, auxRand = utils.randomBytes()) {\n        if (message == null)\n            throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n        this.m = ensureBytes(message);\n        const { x, scalar } = this.getScalar(normalizePrivateKey(privateKey));\n        this.px = x;\n        this.d = scalar;\n        this.rand = ensureBytes(auxRand);\n        if (this.rand.length !== 32)\n            throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    }\n    getScalar(priv) {\n        const point = Point.fromPrivateKey(priv);\n        const scalar = point.hasEvenY() ? priv : CURVE.n - priv;\n        return { point, scalar, x: point.toRawX() };\n    }\n    initNonce(d, t0h) {\n        return numTo32b(d ^ bytesToNumber(t0h));\n    }\n    finalizeNonce(k0h) {\n        const k0 = mod(bytesToNumber(k0h), CURVE.n);\n        if (k0 === _0n)\n            throw new Error('sign: Creation of signature failed. k is zero');\n        const { point: R, x: rx, scalar: k } = this.getScalar(k0);\n        return { R, rx, k };\n    }\n    finalizeSig(R, k, e, d) {\n        return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n    }\n    error() {\n        throw new Error('sign: Invalid signature produced');\n    }\n    async calc() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHash;\n        const t = this.initNonce(d, await tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(await tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(await tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!(await schnorrVerify(sig, m, px)))\n            this.error();\n        return sig;\n    }\n    calcSync() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHashSync;\n        const t = this.initNonce(d, tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!schnorrVerifySync(sig, m, px))\n            this.error();\n        return sig;\n    }\n}\nasync function schnorrSign(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calc();\n}\nfunction schnorrSignSync(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calcSync();\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !R.hasEvenY() || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(await utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        if (error instanceof ShaError)\n            throw error;\n        return false;\n    }\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    _bigintTo32Bytes: numTo32b,\n    _normalizePrivateKey: normalizePrivateKey,\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.hashToPrivateKey(utils.randomBytes(40));\n    },\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof _sha256Sync !== 'function')\n            throw new ShaError('sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = _sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return _sha256Sync(tagP, ...messages);\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n};\nObject.defineProperties(utils, {\n    sha256Sync: {\n        configurable: false,\n        get() {\n            return _sha256Sync;\n        },\n        set(val) {\n            if (!_sha256Sync)\n                _sha256Sync = val;\n        },\n    },\n    hmacSha256Sync: {\n        configurable: false,\n        get() {\n            return _hmacSha256Sync;\n        },\n        set(val) {\n            if (!_hmacSha256Sync)\n                _hmacSha256Sync = val;\n        },\n    },\n});\n","import { Point } from \"@noble/secp256k1\";\nimport type { BytesLike } from \"./bytes\";\nimport { hexlify } from \"./bytes\";\n\n/**\n * Computes the public key from a given private key\n */\nexport function computePublicKey(privKey: BytesLike): string {\n  privKey = hexlify(privKey).slice(2);\n  return \"0x\" + Point.fromPrivateKey(privKey).toHex();\n}\n","/**\n * Converts a string into a UTF-8 Byte Array\n */\nexport function toUtf8Bytes(data: string): Uint8Array {\n  return new Uint8Array(Buffer.from(data));\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","import { Buffer } from \"buffer\";\nimport { hexFalse } from \"../classes/utils/encodeDecodeTransaction\";\nimport { logger } from \"../logger/logger\";\nimport { tinyBig } from \"../shared/tinyBig/tinyBig\";\nimport { arrayify, concat, hexlify, zeroPad } from \"./bytes\";\nimport { keccak256 } from \"./keccak256\";\n\nconst regexBytes = new RegExp(\"^bytes([0-9]+)$\");\nconst regexNumber = new RegExp(\"^(u?int)([0-9]*)$\");\nconst regexArray = new RegExp(\"^(.*)\\\\[([0-9]*)\\\\]$\");\n\n/**\n * Packs a type and value together into a UTF-8 Byte Array\n */\nfunction _pack(type: string, value: any, isArray?: boolean): Uint8Array {\n  switch (type) {\n    case \"address\":\n      if (isArray) {\n        return zeroPad(value, 32);\n      }\n      return arrayify(value);\n    case \"string\":\n      return Buffer.from(value);\n    case \"bytes\":\n      return arrayify(value);\n    case \"bool\":\n      value = value ? \"0x01\" : \"0x00\";\n      if (isArray) {\n        return zeroPad(value, 32);\n      }\n      return arrayify(value);\n  }\n\n  let match = type.match(regexNumber);\n  if (match) {\n    //let signed = (match[1] === \"int\")\n    let size = parseInt(match[2] || \"256\");\n\n    if (\n      (match[2] && String(size) !== match[2]) ||\n      size % 8 !== 0 ||\n      size === 0 ||\n      size > 256\n    ) {\n      logger.throwArgumentError(\"invalid number type\", \"type\", type);\n    }\n\n    if (isArray) {\n      size = 256;\n    }\n\n    value = tinyBig(value).toTwos(size).toNumber();\n    const hexValue = hexlify(value);\n    return zeroPad(hexValue, size / 8);\n  }\n\n  match = type.match(regexBytes);\n  if (match) {\n    const size = parseInt(match[1]);\n\n    if (String(size) !== match[1] || size === 0 || size > 32) {\n      logger.throwArgumentError(\"invalid bytes type\", \"type\", type);\n    }\n    if (arrayify(value).byteLength !== size) {\n      logger.throwArgumentError(`invalid value for ${type}`, \"value\", value);\n    }\n    if (isArray) {\n      return arrayify((value + hexFalse).substring(0, 66));\n    }\n    return value;\n  }\n\n  match = type.match(regexArray);\n  if (match && Array.isArray(value)) {\n    const baseType = match[1];\n    const count = parseInt(match[2] || String(value.length));\n    if (count != value.length) {\n      logger.throwArgumentError(\n        `invalid array length for ${type}`,\n        \"value\",\n        value\n      );\n    }\n    const result: Array<Uint8Array> = [];\n    value.forEach(function (value) {\n      result.push(_pack(baseType, value, true));\n    });\n    return concat(result);\n  }\n\n  return logger.throwArgumentError(\"invalid type\", \"type\", type);\n}\n\n/**\n * Converts arrays with types and values into a hex string that can be hashed\n */\nexport function pack(types: ReadonlyArray<string>, values: ReadonlyArray<any>) {\n  if (types.length != values.length) {\n    logger.throwArgumentError(\n      \"wrong number of values; expected ${ types.length }\",\n      \"values\",\n      values\n    );\n  }\n  const tight: Array<Uint8Array> = [];\n  types.forEach(function (type, index) {\n    tight.push(_pack(type, values[index]));\n  });\n  return hexlify(concat(tight));\n}\n\n/**\n * Hashes data from Solidity using the Keccak256 algorithm.\n */\nexport function solidityKeccak256(\n  types: ReadonlyArray<string>,\n  values: ReadonlyArray<any>\n): string {\n  return keccak256(pack(types, values));\n}\n","import { computePublicKey, toChecksumAddress } from \"..\";\nimport { hexDataSlice } from \"./bytes\";\nimport { keccak256 } from \"./keccak256\";\n\n/**\n * Computes the address that corresponds to a specified public or private key\n */\nexport function computeAddress(key: string): string {\n  // compressed public keys start with 0x04\n  // uncompressed public keys start with 0x03 or 0x02\n  if (\n    !key.startsWith(\"0x04\") &&\n    !key.startsWith(\"0x03\") &&\n    !key.startsWith(\"0x02\")\n  ) {\n    key = computePublicKey(key);\n  }\n  return toChecksumAddress(hexDataSlice(keccak256(hexDataSlice(key, 1)), 12));\n}\n","import type Big from \"big.js\";\nimport type { TinyBig } from \"../shared/tinyBig/tinyBig\";\nimport { tinyBig } from \"../shared/tinyBig/tinyBig\";\nimport { validateType } from \"../shared/validateTypes\";\n\n/**\n * Convert from Ether to Gwei\n */\nexport function etherToGwei(\n  etherQuantity: string | number | TinyBig | Big\n): TinyBig {\n  validateType(etherQuantity, [\"string\", \"number\", \"object\"]);\n  const result = tinyBig(etherQuantity).times(\"1000000000\");\n  return tinyBig(result);\n}\n","import type Big from \"big.js\";\nimport type { TinyBig } from \"../shared/tinyBig/tinyBig\";\nimport { tinyBig } from \"../shared/tinyBig/tinyBig\";\nimport { validateType } from \"../shared/validateTypes\";\n\n/**\n * Convert Ether to Wei\n *\n * Similar to [\"parseEther\" in ethers.js](https://docs.ethers.io/v5/api/utils/display-logic/#utils-parseEther)\n *\n * Similar to [\"toWei\" in web3.js](https://web3js.readthedocs.io/en/v1.7.1/web3-utils.html#towei)\n */\nexport function etherToWei(\n  etherQuantity: string | number | TinyBig | Big\n): TinyBig {\n  validateType(etherQuantity, [\"string\", \"number\", \"object\"]);\n  const result = tinyBig(etherQuantity).times(\"1000000000000000000\");\n  return tinyBig(result);\n}\n","import type Big from \"big.js\";\nimport { tinyBig } from \"../shared/tinyBig/tinyBig\";\nimport { validateType } from \"../shared/validateTypes\";\nimport type { TinyBig } from \"./../shared/tinyBig/tinyBig\";\n\n/**\n * Convert from Gwei to Ether\n *\n * No direct equivalent in ethers.js; requires multiple functions to achieve.\n *\n * No direct equivalent in web3; requires multiple functions to achieve.\n */\nexport function gweiToEther(\n  gweiQuantity: string | number | TinyBig | Big\n): TinyBig {\n  validateType(gweiQuantity, [\"string\", \"number\", \"object\"]);\n  const result = tinyBig(gweiQuantity).div(\"1000000000\");\n  return tinyBig(result);\n}\n","import type { Bytes } from \"../index\";\nimport { concat, keccak256, toUtf8Bytes } from \"../index\";\n\nconst messagePrefix = \"\\x19Aurora Signed Message:\\n\";\n\n/**\n * Computes the EIP-191 personal message digest of message.\n */\nexport function hashMessage(message: Bytes | string): string {\n  if (typeof message === \"string\") {\n    message = toUtf8Bytes(message);\n  }\n  return keccak256(\n    concat([\n      toUtf8Bytes(messagePrefix),\n      toUtf8Bytes(String(message.length)),\n      message,\n    ])\n  );\n}\n","import { toChecksumAddress } from \"..\";\nimport { validateType } from \"../shared/validateTypes\";\n\n/**\n * Returns a boolean as to whether the input is a valid address.\n * Does NOT support ICAP addresses\n */\nexport function isAddress(address: string): boolean {\n  validateType(address, [\"string\"]);\n  try {\n    toChecksumAddress(address);\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\n","import { logger } from \"./../logger/logger\";\nimport type { Signature, SignatureLike } from \"./bytes\";\nimport {\n  arrayify,\n  hexlify,\n  hexZeroPad,\n  isBytesLike,\n  isHexString,\n  zeroPad,\n} from \"./bytes\";\n\n/**\n * Expands a signature into the full signature object and fills in missing properties.\n *\n * inspired from [\"splitSignature\" in ethers.js](https://docs.ethers.io/v5/api/utils/bytes/#utils-splitSignature)\n */\nexport function splitSignature(signature: SignatureLike): Signature {\n  const result = {\n    r: \"0x\",\n    s: \"0x\",\n    _vs: \"0x\",\n    recoveryParam: 0,\n    v: 0,\n    yParityAndS: \"0x\",\n    compact: \"0x\",\n  };\n  if (isBytesLike(signature)) {\n    const bytes = arrayify(signature);\n    // Get the r, s and v\n    if (bytes.length === 64) {\n      // EIP-2098; pull the v from the top bit of s and clear it\n      result.v = 27 + (bytes[32] >> 7);\n      bytes[32] &= 0x7f;\n      result.r = hexlify(bytes.slice(0, 32));\n      result.s = hexlify(bytes.slice(32, 64));\n    } else if (bytes.length === 65) {\n      result.r = hexlify(bytes.slice(0, 32));\n      result.s = hexlify(bytes.slice(32, 64));\n      result.v = bytes[64];\n    } else {\n      logger.throwArgumentError(\n        \"invalid signature string\",\n        \"signature\",\n        signature\n      );\n    }\n    // Allow a recid to be used as the v\n    if (result.v < 27) {\n      if (result.v === 0 || result.v === 1) {\n        result.v += 27;\n      } else {\n        logger.throwArgumentError(\n          \"signature invalid v byte\",\n          \"signature\",\n          signature\n        );\n      }\n    }\n    // Compute recoveryParam from v\n    result.recoveryParam = 1 - (result.v % 2);\n    // Compute _vs from recoveryParam and s\n    if (result.recoveryParam) {\n      bytes[32] |= 0x80;\n    }\n    result._vs = hexlify(bytes.slice(32, 64));\n  } else {\n    result.r = signature.r;\n    result.s = signature.s as string;\n    result.v = signature.v as number;\n    result.recoveryParam = signature.recoveryParam as number;\n    result._vs = signature._vs as string;\n    // If the _vs is available, use it to populate missing s, v and recoveryParam\n    // and verify non-missing s, v and recoveryParam\n    if (result._vs != null) {\n      const vs_1 = zeroPad(arrayify(result._vs), 32);\n      result._vs = hexlify(vs_1);\n      // Set or check the recid\n      const recoveryParam = vs_1[0] >= 128 ? 1 : 0;\n      if (result.recoveryParam == null) {\n        result.recoveryParam = recoveryParam;\n      } else if (result.recoveryParam !== recoveryParam) {\n        logger.throwArgumentError(\n          \"signature recoveryParam mismatch _vs\",\n          \"signature\",\n          signature\n        );\n      }\n      // Set or check the s\n      vs_1[0] &= 0x7f;\n      const s = hexlify(vs_1);\n      if (result.s == null) {\n        result.s = s;\n      } else if (result.s !== s) {\n        logger.throwArgumentError(\n          \"signature v mismatch _vs\",\n          \"signature\",\n          signature\n        );\n      }\n    }\n    // Use recid and v to populate each other\n    if (result.recoveryParam == null) {\n      if (result.v == null) {\n        logger.throwArgumentError(\n          \"signature missing v and recoveryParam\",\n          \"signature\",\n          signature\n        );\n      } else if (result.v === 0 || result.v === 1) {\n        result.recoveryParam = result.v;\n      } else {\n        result.recoveryParam = 1 - (result.v % 2);\n      }\n    } else {\n      if (result.v == null) {\n        result.v = 27 + result.recoveryParam;\n      } else {\n        const recId =\n          result.v === 0 || result.v === 1 ? result.v : 1 - (result.v % 2);\n        if (result.recoveryParam !== recId) {\n          logger.throwArgumentError(\n            \"signature recoveryParam mismatch v\",\n            \"signature\",\n            signature\n          );\n        }\n      }\n    }\n    if (result.r == null || !isHexString(result.r)) {\n      logger.throwArgumentError(\n        \"signature missing or invalid r\",\n        \"signature\",\n        signature\n      );\n    } else {\n      result.r = hexZeroPad(result.r, 32);\n    }\n    if (result.s == null || !isHexString(result.s)) {\n      logger.throwArgumentError(\n        \"signature missing or invalid s\",\n        \"signature\",\n        signature\n      );\n    } else {\n      result.s = hexZeroPad(result.s, 32);\n    }\n    const vs = arrayify(result.s);\n    if (vs[0] >= 128) {\n      logger.throwArgumentError(\n        \"signature s out of range\",\n        \"signature\",\n        signature\n      );\n    }\n    if (result.recoveryParam) {\n      vs[0] |= 0x80;\n    }\n    const _vs = hexlify(vs);\n    if (result._vs) {\n      if (!isHexString(result._vs)) {\n        logger.throwArgumentError(\n          \"signature invalid _vs\",\n          \"signature\",\n          signature\n        );\n      }\n      result._vs = hexZeroPad(result._vs, 32);\n    }\n    // Set or check the _vs\n    if (result._vs == null) {\n      result._vs = _vs;\n    } else if (result._vs !== _vs) {\n      logger.throwArgumentError(\n        \"signature _vs mismatch v and s\",\n        \"signature\",\n        signature\n      );\n    }\n  }\n  result.yParityAndS = result._vs;\n  result.compact = result.r + result.yParityAndS.substring(2);\n  return result;\n}\n","import type Big from \"big.js\";\nimport type { TinyBig } from \"../shared/tinyBig/tinyBig\";\nimport { tinyBig } from \"../shared/tinyBig/tinyBig\";\nimport { validateType } from \"../shared/validateTypes\";\n\n/**\n * Convert from Wei to Ether\n *\n * inspired from [\"formatEther\" in ethers.js](https://docs.ethers.io/v5/api/utils/display-logic/#utils-formatEther)\n *\n * inspired from [\"fromWei\" in web3.js](https://web3js.readthedocs.io/en/v1.7.1/web3-utils.html#fromwei)\n */\nexport function weiToEther(\n  weiQuantity: string | number | TinyBig | Big\n): TinyBig {\n  validateType(weiQuantity, [\"string\", \"number\", \"object\"]);\n  // eslint-disable-next-line no-useless-catch\n  try {\n    let _weiQuantity = weiQuantity;\n    if (typeof weiQuantity === \"string\" && weiQuantity.slice(0, 2) === \"0x\") {\n      _weiQuantity = BigInt(weiQuantity).toString();\n    }\n    const result = tinyBig(_weiQuantity).div(\"1000000000000000000\");\n    return tinyBig(result);\n  } catch (error) {\n    throw error;\n  }\n}\n"],"names":["lookup","revLookup","Arr","Uint8Array","Array","code","i","len","length","charCodeAt","encodeChunk","uint8","start","end","num","output","push","join","b64","tmp","lens","Error","validLen","indexOf","getLens","placeHoldersLen","arr","_byteLength","curByte","extraBytes","parts","maxChunkLength","len2","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","value","c","rt","abs","isNaN","floor","log","LN2","customInspectSymbol","Symbol","exports","Buffer","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","buf","Object","setPrototypeOf","prototype","arg","encodingOrOffset","TypeError","allocUnsafe","from","string","encoding","isEncoding","byteLength","actual","write","slice","fromString","ArrayBuffer","isView","arrayView","isInstance","copy","fromArrayBuffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","b","obj","isBuffer","checked","undefined","numberIsNaN","type","isArray","data","fromObject","toPrimitive","assertSize","size","array","toString","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","this","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","bidirectionalIndexOf","val","dir","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","ieee754","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","constructor","super","writable","configurable","name","message","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","INVALID_BASE64_RE","leadSurrogate","split","base64clean","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","copy_1","I","O","o","oi","ii","_copy","require$$0","__esModule","default","_ref","A","C","_x","xy","x1","x2","ROUND_CONSTANTS","Uint32Array","_roundConstants","roundIndex","_piShuffles","_interopRequireDefault","_rhoOffsets","require$$1","require$$2","W","H","L","Wi","ri","r","D","x20","x21","x22","x23","x24","_chi","_iota","_rhoPi","_theta","require$$3","_permute","xorWords","readWords","_this","capacity","padding","keccak","blockSize","queueSize","queueOffset","state","stateSize","queue","_buffer","absorb","squeeze","options","reset","SHAKE","SHA3Hash","SHA3","Keccak","_sponge","createHash","allowedSizes","defaultSize","Hash","sponge","update","digest","formatOrOptions","format","hexToDecimal","hex","hexFalse","repeat","hexTrue","encodeData","jsonABIArgument","args","hash","inputs","map","functionString","jsonABIInputsLength","shouldValidateInputLength","find","argsWithTypes","reduce","acc","basicType","_exec","exec","forEach","inputType","rawArg","startsWith","character","padEnd","padStart","functionHash","encodedArgs","nodeResponse","rawOutputs","outputs","match","outputType","toChecksumAddress","tinyBig","estimateGas","txnData","previousValue","currentValue","BaseContract","addressOrName","contractInterface","signerOrProvider","_this2","_address","_provider","filter","defineReadOnly","_args","_arguments2","functionArguments","lastArg","gasLimit","gas","req","Promise","resolve","to","decimalGas","reject","then","decodeRPCResponse","Contract","logger","packageVersion","throwError","argsLength","keys","entries","index","throwArgumentError","_proto","checkSafeUint53","operation","fault","Logger","MAX_DP","NAME","INVALID","INVALID_DP","DIV_BY_ZERO","P","UNDEFINED","NUMERIC","round","sd","rm","more","xc","RM","unshift","pop","stringify","doExponential","isNonzero","charAt","cmp","isneg","yc","k","l","div","Big","dp","DP","bl","bt","bz","ai","al","rl","q","qc","qi","p","shift","eq","gt","gte","lt","lte","minus","t","xlty","plus","xe","ye","reverse","mod","ygtx","times","neg","add","one","prec","sqrt","half","toExponential","toFixed","for","NE","PE","toNumber","strict","toPrecision","_Big_","nl","test","search","substring","parse","roundDown","roundHalfUp","roundHalfEven","roundUp","stripTrailingZeroes","numberString","isNegative","scientificStrToDecimalStr","scientificString","base","power","_scientificString$spl","_base$split","wholeNumber","_base$split$","fraction","splitPaddedNumber","baseLength","splice","TinyBig","_Big","padAndChop","padChar","_inheritsLoose","toHexString","toTwos","bitCount","binaryStr","twosComp","transaction","cleanedTransaction","key","validateType","allowedTypes","address","addressHash","checksumAddress","toUpperCase","cleanLog","receiptLog","cleanedLog","XMLHttpRequest","u","ok","status","statusText","url","responseURL","text","responseText","json","JSON","blob","Blob","response","clone","headers","has","open","method","onload","getAllResponseHeaders","onerror","withCredentials","credentials","setRequestHeader","send","body","browser","self","fetch","buildRPCPostBody","params","jsonrpc","id","isBytesLike","isHexString","isBytes","v","result","allowMissingPrefix","isHexable","hexPad","_result","arrayOfBytesLike","objects","item","arrayify","accum","object","zeroPad","HexCharacters","hexlify","hexDataSlice","endOffset","hexStripZeros","hexZeroPad","prepareTransaction","preparedTransaction","chainsInfo","blockTag","BaseProvider","rpcUrls","_rpcUrls","_post","post","unfetch","_unused","selectRpcUrl","getNetwork","hexChainId","chainId","info","ensAddress","getBlockNumber","currentBlockNumber","getTransaction","transactionHash","all","getBlock","blockNumber","cleanTransaction","confirmations","number","getTransactionReceipt","rpcTransaction","_ref2","cleanedTransactionReceipt","cleanTransactionReceipt","transactionReceipt","_extends","byzantium","getTransactionCount","prepBlockTag","transactionCount","timeFrame","returnTransactionObjects","rpcBlock","cleanBlock","block","cleanedBlock","transactions","getGasPrice","hexGasPrice","getBalance","hexBalance","getCode","gasUsed","getLogs","filterByRange","fromBlock","toBlock","rpcLogs","gasPrice","maxPriorityFeePerGas","maxFeePerGas","FallthroughProvider","_BaseProvider","rpcUrlCounter","timeoutDuration","genesisCount","recursivePostRetry","prom","time","genesisRpcUrl","race","_r","setTimeout","JsonRpcProvider","rpcUrl","keccak256","bufferableData","_0n","_1n","_2n","_3n","_8n","CURVE","freeze","h","Gx","Gy","beta","weistrass","x3","USE_ENDOMORPHISM","JacobianPoint","z","static","Point","points","toInv","nums","scratch","lastMultiplied","inverted","invert","reduceRight","invertBatch","toAffine","toAffineBatch","fromAffine","other","X1","Y1","Z1","X2","Y2","Z2","Z1Z1","Z2Z2","U1","U2","S1","S2","negate","double","B","x1b","F","X3","Y3","Z3","ZERO","HH","HHH","V","subtract","multiplyUnsafe","scalar","P0","normalizeScalar","k1neg","k1","k2neg","k2","splitScalarEndo","k1p","k2p","precomputeWindow","windows","window","wNAF","affinePoint","BASE","_WINDOW_SIZE","precomputes","pointPrecomputes","normalizeZ","f","windowSize","mask","maxNumber","shiftBy","wbits","pr","cached","multiply","point","fake","f1p","f2p","invZ","iz1","iz2","iz3","ax","ay","WeakMap","_setWindowSize","delete","hasEvenY","isShort","bytesToNumber","isValidFieldElement","_6n","_11n","_22n","_23n","_44n","_88n","b2","b3","b6","pow2","b9","b11","b22","b44","b88","b176","b220","b223","t1","t2","sqrtMod","isYOdd","assertValidity","ensureBytes","header","fromCompressedHex","fromUncompressedHex","privateKey","isSafeInteger","hexToNumber","isWithinCurveOrder","normalizePrivateKey","msgHash","signature","recovery","delta","truncateHash","Signature","fromDER","fromCompact","normalizeSignature","R","fromHex","numTo32bStr","rinv","u1","u2","Q","multiplyAndAddUnsafe","toRawBytes","isCompressed","hexToBytes","toHex","toHexX","toRawX","left","aP","bQ","sum","sliceDER","parseDERInt","bytesToHex","sBytes","rBytesLeft","parseDERSignature","hasHighS","normalizeS","toDERRawBytes","toDERHex","sHex","numberToHexUnpadded","rHex","rLen","sLen","toCompactRawBytes","toCompactHex","hexes","uint8a","POW_2_256","hexByte","byte","modulo","divNearest","ENDO","a1","b1","a2","POW_2_128","c1","c2","computePublicKey","privKey","fromPrivateKey","toUtf8Bytes","regexBytes","RegExp","regexNumber","regexArray","_pack","baseType","pack","types","values","tight","computeAddress","etherQuantity","gweiQuantity","items","hexDataLength","trimmed","_vs","recoveryParam","yParityAndS","compact","vs_1","vs","stripZeros","weiToEther","weiQuantity","_weiQuantity"],"mappings":"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"}